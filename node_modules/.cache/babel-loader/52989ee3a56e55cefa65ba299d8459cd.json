{"ast":null,"code":"var _jsxFileName = \"/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\nimport { formatEther } from '@ethersproject/units';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    gap: theme.spacing(1)\n  }\n}));\nexport const Header = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    account,\n    activateBrowserWallet,\n    deactivate,\n    chainId\n  } = useEthers();\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const etherBalance = useEtherBalance(account);\n  const isConnected = account !== undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this), etherBalance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Balance: \", formatEther(etherBalance)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 30\n    }, this), isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: deactivate,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: () => activateBrowserWallet(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"ugjipHBoplJ9+SnRH9Ltrf8oT4E=\", false, function () {\n  return [useStyles, useEthers, useEtherBalance];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/Header.tsx"],"names":["Button","makeStyles","useEthers","useEtherBalance","formatEther","useStyles","theme","container","padding","spacing","display","justifyContent","gap","Header","classes","account","activateBrowserWallet","deactivate","chainId","artemLotteryAddress","networkMapping","String","constants","AddressZero","etherBalance","isConnected","undefined"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,eAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,cAAc,EAAE,UAHT;AAIPC,IAAAA,GAAG,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAJE;AAD0B,CAAZ,CAAD,CAA5B;AAUA,OAAO,MAAMI,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,qBAAX;AAAkCC,IAAAA,UAAlC;AAA8CC,IAAAA;AAA9C,MAA0DhB,SAAS,EAAzE;AACA,QAAMiB,mBAAmB,GAAGD,OAAO,GAAGE,cAAc,CAACC,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDI,SAAS,CAACC,WAArG;AAEA,QAAMC,YAAY,GAAGrB,eAAe,CAACY,OAAD,CAApC;AAGA,QAAMU,WAAW,GAAGV,OAAO,KAAKW,SAAhC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACP,SAAxB;AAAA,eACKQ,OAAO,iBAAI;AAAA,8BAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADhB,EAEKS,YAAY,iBAAI;AAAA,8BAAapB,WAAW,CAACoB,YAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFrB,EAIKC,WAAW,gBACR,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAER,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKR,QAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,OAAO,EAAE,MAAMD,qBAAqB,EAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAhCM;;GAAMH,M;UACOR,S,EAEgDH,S,EAG3CC,e;;;KANZU,M","sourcesContent":["import { Button, makeStyles } from \"@material-ui/core\"\nimport { useEthers, useEtherBalance } from \"@usedapp/core\"\nimport { formatEther } from '@ethersproject/units'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(4),\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        gap: theme.spacing(1)\n    },\n}))\n\n\nexport const Header = () => {\n    const classes = useStyles()\n\n    const { account, activateBrowserWallet, deactivate, chainId } = useEthers()\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n\n    const etherBalance = useEtherBalance(account)\n\n\n    const isConnected = account !== undefined\n\n    return (\n        <div className={classes.container}>\n            {account && <p>Account: {account}</p>}\n            {etherBalance && <p>Balance: {formatEther(etherBalance)}</p>}\n            \n            {isConnected ? (\n                <Button variant=\"contained\" onClick={deactivate}>\n                    Disconnect\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => activateBrowserWallet()}\n                >\n                    Connect\n                </Button>\n            )}\n\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}