{"ast":null,"code":"var _jsxFileName = \"/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/EnterLottery.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, Button, CircularProgress } from \"@material-ui/core\";\nimport { useEnterLottery, useEntranceFee } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    justifyContent: 'center'\n  },\n  text: {\n    color: theme.palette.common.white\n  }\n}));\nexport const EnterLottery = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    send: enterLotterySend,\n    enterLotteryState\n  } = useEnterLottery();\n  const entranceFee = useEntranceFee();\n\n  const handleEnterLottery = () => {\n    return enterLotterySend(entranceFee);\n  };\n\n  const isMining = enterLotteryState.status === \"Mining\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\",\n      onClick: handleEnterLottery,\n      disabled: isMining,\n      children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 26\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this) : \"Enter lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: entranceFee ? entranceFee.toNumber() : -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EnterLottery, \"jFYL1oxYoqwq8Wddvz3aXnjgrmI=\", false, function () {\n  return [useStyles, useEnterLottery, useEntranceFee];\n});\n\n_c = EnterLottery;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterLottery\");","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/EnterLottery.tsx"],"names":["React","makeStyles","Button","CircularProgress","useEnterLottery","useEntranceFee","useStyles","theme","root","justifyContent","text","color","palette","common","white","EnterLottery","classes","send","enterLotterySend","enterLotteryState","entranceFee","handleEnterLottery","isMining","status","toNumber"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAAoCC,gBAApC,QAAsE,mBAAtE;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,UAAhD;;;AAIA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,cAAc,EAAE;AADd,GAD+B;AAIrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,MAAd,CAAqBC;AAD1B;AAJ+B,CAAZ,CAAD,CAA5B;AAWA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAAEW,IAAAA,IAAI,EAAEC,gBAAR;AAA0BC,IAAAA;AAA1B,MACFf,eAAe,EADnB;AAGA,QAAMgB,WAAW,GAAGf,cAAc,EAAlC;;AAEA,QAAMgB,kBAAkB,GAAG,MAAM;AAC7B,WAAOH,gBAAgB,CAACE,WAAD,CAAvB;AACH,GAFD;;AAGA,QAAME,QAAQ,GAAGH,iBAAiB,CAACI,MAAlB,KAA6B,QAA9C;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAEF,kBAJb;AAKI,MAAA,QAAQ,EAAEC,QALd;AAAA,gBAMKA,QAAQ,gBAAG,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAH,GAAoC;AANjD;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBAAMF,WAAW,GAAGA,WAAW,CAACI,QAAZ,EAAH,GAA4B,CAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH,CA3BM;;GAAMT,Y;UACOT,S,EAEZF,e,EAEgBC,c;;;KALXU,Y","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { makeStyles, Button, Input, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport { useEnterLottery, useEntranceFee } from \"../hooks\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        justifyContent: 'center'\n    },\n    text: {\n        color: theme.palette.common.white,\n    }\n}))\n\n\n\nexport const EnterLottery = () => {\n    const classes = useStyles()\n    const { send: enterLotterySend, enterLotteryState } =\n        useEnterLottery()\n\n    const entranceFee = useEntranceFee()\n\n    const handleEnterLottery = () => {\n        return enterLotterySend(entranceFee)\n    }\n    const isMining = enterLotteryState.status === \"Mining\"\n\n\n\n    return (\n        <>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                onClick={handleEnterLottery}\n                disabled={isMining}>\n                {isMining ? <CircularProgress size={26} /> : \"Enter lottery\"}\n            </Button>\n            <div>{entranceFee ? entranceFee.toNumber() : -1}</div>\n\n        </>)\n}\n\n"]},"metadata":{},"sourceType":"module"}