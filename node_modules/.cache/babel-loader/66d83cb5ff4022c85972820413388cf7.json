{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCall, useContractCalls } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const usePlayers = count => {\n  _s();\n\n  var _useContractCalls, _useContractCall;\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n  let callsArray = [];\n  const results_array = (_useContractCalls = useContractCalls(callsArray)) !== null && _useContractCalls !== void 0 ? _useContractCalls : [];\n\n  for (var _i = 0; _i < LotteryContractCallNames.length; _i++) {\n    console.log(\"result \" + _i + \" = \" + results_array[_i]);\n  }\n\n  const [player] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"players\",\n    args: [0]\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  console.log(\"MYTAG players0=\" + player);\n  return player;\n};\n\n_s(usePlayers, \"6puwxGg/31kPBBcRzfgZOeSm2H4=\", false, function () {\n  return [useEthers, useContractCalls, useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/usePlayers.ts"],"names":["useEthers","useContractCall","useContractCalls","constants","utils","ArtemLottery","networkMapping","usePlayers","count","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","callsArray","results_array","_i","LotteryContractCallNames","length","console","log","player","address","method","args"],"mappings":";;AAAA,SAASA,SAAT,EAAyCC,eAAzC,EAAwEC,gBAAxE,QAAgG,eAAhG;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAIA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAuC;AAAA;;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUL,YAAhB;AACA,QAAMM,mBAAmB,GAAGF,OAAO,GAAGH,cAAc,CAACM,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDN,SAAS,CAACU,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA9B;AAEA,MAAIM,UAAU,GAAG,EAAjB;AAEA,QAAMC,aAAoB,wBAAGf,gBAAgB,CAACc,UAAD,CAAnB,iEAAmC,EAA7D;;AAEA,OAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,wBAAwB,CAACC,MAA/C,EAAuDF,EAAE,EAAzD,EAA6D;AACzDG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,EAAZ,GAAiB,KAAjB,GAAyBD,aAAa,CAACC,EAAD,CAAlD;AACH;;AAED,QAAM,CAACK,MAAD,wBAAgBtB,eAAe,CAAC;AAClCS,IAAAA,GAAG,EAAEI,qBAD6B;AAElCU,IAAAA,OAAO,EAAEb,mBAFyB;AAGlCc,IAAAA,MAAM,EAAE,SAH0B;AAIlCC,IAAAA,IAAI,EAAE,CAAC,CAAD;AAJ4B,GAAD,CAA/B,+DAKA,EALN;AAOAL,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,MAAhC;AAEA,SAAOA,MAAP;AACH,CAxBM;;GAAMhB,U;UACWP,S,EAOSE,gB,EAMPD,e","sourcesContent":["import { useEthers, useContractFunction, useContractCall, ContractCall, useContractCalls } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { formatUnits } from \"@ethersproject/units\"\n\n\nexport const usePlayers = (count: number): string | undefined => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n    \n    let callsArray = [] as ContractCall[];\n    \n    const results_array: any[] = useContractCalls(callsArray) ?? [];\n\n    for (var _i = 0; _i < LotteryContractCallNames.length; _i++) {\n        console.log(\"result \" + _i + \" = \" + results_array[_i])\n    }\n    \n    const [player]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"players\",\n        args: [0],\n    }) ?? []\n\n    console.log(\"MYTAG players0=\" + player)\n\n    return player;\n}"]},"metadata":{},"sourceType":"module"}