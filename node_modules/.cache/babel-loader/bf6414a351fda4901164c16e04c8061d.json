{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const useLotteryTimeStamp = () => {\n  _s();\n\n  var _useContractCall;\n\n  // address\n  // abi\n  // chainId\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi); //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n\n  const [lastTimeStamp] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"lastTimeStamp\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return lastTimeStamp;\n}; // const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }\n\n_s(useLotteryTimeStamp, \"My0ConC8wq5+sD2i0i5tnHZ+TJ8=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useLotteryTimeStamp.ts"],"names":["useEthers","useContractCall","constants","utils","ArtemLottery","networkMapping","useLotteryTimeStamp","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","lastTimeStamp","address","method","args"],"mappings":";;AACA,SAASA,SAAT,EAAyCC,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAA6B;AAAA;;AAAA;;AAC5D;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUJ,YAAhB;AACA,QAAMK,mBAAmB,GAAGF,OAAO,GAAGF,cAAc,CAACK,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDL,SAAS,CAACS,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIT,KAAK,CAACU,SAAV,CAAoBL,GAApB,CAA9B,CAP4D,CAQ5D;;AACA,QAAM,CAACM,aAAD,wBAAuBb,eAAe,CAAC;AACzCO,IAAAA,GAAG,EAAEI,qBADoC;AAEzCG,IAAAA,OAAO,EAAEN,mBAFgC;AAGzCO,IAAAA,MAAM,EAAE,eAHiC;AAIzCC,IAAAA,IAAI,EAAE;AAJmC,GAAD,CAAtC,+DAKA,EALN;AAOA,SAAOH,aAAP;AACH,CAjBM,C,CAqBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA/BaR,mB;UAIWN,S,EAKSC,e","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nexport const useLotteryTimeStamp = (): BigNumber | undefined => {\n    // address\n    // abi\n    // chainId\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n    //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n    const [lastTimeStamp]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"lastTimeStamp\",\n        args: [],\n    }) ?? [];\n\n    return lastTimeStamp;\n}\n\n\n\n// const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }"]},"metadata":{},"sourceType":"module"}