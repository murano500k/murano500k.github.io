{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const usePlayers = count => {\n  _s();\n\n  var _useContractCall;\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n\n  for (var i = 0; i < count; i++) {}\n\n  const [player] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"players\",\n    args: [0]\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  console.log(\"MYTAG players0=\" + player);\n  return player;\n};\n\n_s(usePlayers, \"My0ConC8wq5+sD2i0i5tnHZ+TJ8=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/usePlayers.ts"],"names":["useEthers","useContractCall","constants","utils","ArtemLottery","networkMapping","usePlayers","count","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","i","player","address","method","args","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAyCC,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAIA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAuC;AAAA;;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUL,YAAhB;AACA,QAAMM,mBAAmB,GAAGF,OAAO,GAAGH,cAAc,CAACM,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDN,SAAS,CAACU,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA9B;;AACA,OAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,KAAnB,EAA2BQ,CAAC,EAA5B,EAA+B,CAE9B;;AACD,QAAM,CAACC,MAAD,wBAAgBf,eAAe,CAAC;AAClCQ,IAAAA,GAAG,EAAEI,qBAD6B;AAElCI,IAAAA,OAAO,EAAEP,mBAFyB;AAGlCQ,IAAAA,MAAM,EAAE,SAH0B;AAIlCC,IAAAA,IAAI,EAAE,CAAC,CAAD;AAJ4B,GAAD,CAA/B,+DAKA,EALN;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBL,MAAhC;AAEA,SAAOA,MAAP;AACH,CAlBM;;GAAMV,U;UACWN,S,EAOEC,e","sourcesContent":["import { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { formatUnits } from \"@ethersproject/units\"\n\n\nexport const usePlayers = (count: number): string | undefined => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n    for(var i = 0 ;i < count ; i++){\n        \n    }\n    const [player]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"players\",\n        args: [0],\n    }) ?? []\n\n    console.log(\"MYTAG players0=\" + player)\n\n    return player;\n}"]},"metadata":{},"sourceType":"module"}