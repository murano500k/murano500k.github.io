{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCalls } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const usePlayers = count => {\n  _s();\n\n  var _useContractCalls;\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n  let callsArray = [];\n\n  for (var i = 0; i < count; i++) {\n    callsArray.push({\n      abi: artemLotteryInterface,\n      address: artemLotteryAddress,\n      method: \"players\",\n      args: [i]\n    });\n  }\n\n  const results_array = (_useContractCalls = useContractCalls(callsArray)) !== null && _useContractCalls !== void 0 ? _useContractCalls : [];\n  let result = \"\";\n\n  for (var _i = 0; _i < count; _i++) {\n    result = result + results_array[_i] + \",\\n\"; //console.log(\"result \" + _i + \" = \" + results_array[_i])\n  }\n\n  results_array === null || results_array === void 0 ? void 0 : results_array.forEach(function (player) {\n    console.log(\"result \" + _i + \" = \" + player);\n  });\n\n  for (let player in results_array) {\n    console.log(\"result \" + _i + \" = \" + player);\n  }\n\n  return result;\n};\n\n_s(usePlayers, \"lWARwgmfKB0Zr81Z1IoCAPVscoA=\", false, function () {\n  return [useEthers, useContractCalls];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/usePlayers.ts"],"names":["useEthers","useContractCalls","constants","utils","ArtemLottery","networkMapping","usePlayers","count","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","callsArray","i","push","address","method","args","results_array","result","_i","forEach","player","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAwEC,gBAAxE,QAAgG,eAAhG;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAIA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAuC;AAAA;;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUL,YAAhB;AACA,QAAMM,mBAAmB,GAAGF,OAAO,GAAGH,cAAc,CAACM,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDN,SAAS,CAACU,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA9B;AAEA,MAAIM,UAAU,GAAG,EAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAApB,EAA2BS,CAAC,EAA5B,EAAgC;AAC5BD,IAAAA,UAAU,CAACE,IAAX,CAAgB;AACZR,MAAAA,GAAG,EAAEI,qBADO;AAEZK,MAAAA,OAAO,EAAER,mBAFG;AAGZS,MAAAA,MAAM,EAAE,SAHI;AAIZC,MAAAA,IAAI,EAAE,CAACJ,CAAD;AAJM,KAAhB;AAMH;;AACD,QAAMK,aAAoB,wBAAGpB,gBAAgB,CAACc,UAAD,CAAnB,iEAAmC,EAA7D;AACA,MAAIO,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGhB,KAAtB,EAA6BgB,EAAE,EAA/B,EAAmC;AAC/BD,IAAAA,MAAM,GAAGA,MAAM,GAAGD,aAAa,CAACE,EAAD,CAAtB,GAA6B,KAAtC,CAD+B,CAE/B;AACH;;AACDF,EAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEG,OAAf,CAAuB,UAAUC,MAAV,EAAkB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,EAAZ,GAAiB,KAAjB,GAAyBE,MAArC;AACH,GAFD;;AAIA,OAAK,IAAIA,MAAT,IAAmBJ,aAAnB,EAAkC;AAE9BK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,EAAZ,GAAiB,KAAjB,GAAyBE,MAArC;AACH;;AAGD,SAAOH,MAAP;AACH,CAjCM;;GAAMhB,U;UACWN,S,EAeSC,gB","sourcesContent":["import { useEthers, useContractFunction, useContractCall, ContractCall, useContractCalls } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { formatUnits } from \"@ethersproject/units\"\n\n\nexport const usePlayers = (count: number): string | undefined => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n\n    let callsArray = [] as ContractCall[];\n\n    for (var i = 0; i < count; i++) {\n        callsArray.push({\n            abi: artemLotteryInterface,\n            address: artemLotteryAddress,\n            method: \"players\",\n            args: [i],\n        })\n    }\n    const results_array: any[] = useContractCalls(callsArray) ?? [];\n    let result = \"\";\n    for (var _i = 0; _i < count; _i++) {\n        result = result + results_array[_i] + \",\\n\"\n        //console.log(\"result \" + _i + \" = \" + results_array[_i])\n    }\n    results_array?.forEach(function (player) {\n        console.log(\"result \" + _i + \" = \" + player)\n    }\n    )\n    for (let player in results_array) {\n\n        console.log(\"result \" + _i + \" = \" + player)\n    }\n\n\n    return result;\n}"]},"metadata":{},"sourceType":"module"}