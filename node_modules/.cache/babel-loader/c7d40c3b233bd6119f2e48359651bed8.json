{"ast":null,"code":"var _jsxFileName = \"/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/yourWallet/YourWallet.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Tab } from \"@material-ui/core\";\nimport { WalletBalance } from \"./WalletBalance\";\nimport { StakeForm } from \"./StakeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tabContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(4)\n  },\n  box: {\n    backgroundColor: \"white\",\n    borderRadius: \"25px\"\n  },\n  header: {\n    color: \"white\"\n  }\n}));\nexport const YourWallet = ({\n  supportedTokens\n}) => {\n  _s();\n\n  const [selectedTokenIndex, setSelectedTokenIndex] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setSelectedTokenIndex(parseInt(newValue));\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: \" Your Wallet! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(TabContext, {\n        value: selectedTokenIndex.toString(),\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          onChange: handleChange,\n          \"aria-label\": \"stake form tabs\",\n          children: supportedTokens.map((token, index) => {\n            return /*#__PURE__*/_jsxDEV(Tab, {\n              label: token.name,\n              value: index.toString()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), supportedTokens.map((token, index) => {\n          return /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: index.toString(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tabContent,\n              children: [/*#__PURE__*/_jsxDEV(WalletBalance, {\n                token: supportedTokens[selectedTokenIndex]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StakeForm, {\n                token: supportedTokens[selectedTokenIndex]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(YourWallet, \"i0IAfdIue33ZXf6aALaMyotEzMs=\", false, function () {\n  return [useStyles];\n});\n\n_c = YourWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourWallet\");","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/yourWallet/YourWallet.tsx"],"names":["React","useState","Box","makeStyles","TabContext","TabList","TabPanel","Tab","WalletBalance","StakeForm","useStyles","theme","tabContent","display","flexDirection","alignItems","gap","spacing","box","backgroundColor","borderRadius","header","color","YourWallet","supportedTokens","selectedTokenIndex","setSelectedTokenIndex","handleChange","event","newValue","parseInt","classes","toString","map","token","index","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,QAA8C,kBAA9C;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAMA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,aAAa,EAAE,QAFP;AAGRC,IAAAA,UAAU,EAAE,QAHJ;AAIRC,IAAAA,GAAG,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAJG,GADyB;AAOrCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,eAAe,EAAE,OADhB;AAEDC,IAAAA,YAAY,EAAE;AAFb,GAPgC;AAWrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAX6B,CAAZ,CAAD,CAA5B;AAgBA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0C;AAAA;;AAChE,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CzB,QAAQ,CAAS,CAAT,CAA5D;;AAEA,QAAM0B,YAAY,GAAG,CAACC,KAAD,EAA+BC,QAA/B,KAAoD;AACrEH,IAAAA,qBAAqB,CAACI,QAAQ,CAACD,QAAD,CAAT,CAArB;AACH,GAFD;;AAGA,QAAME,OAAO,GAAGrB,SAAS,EAAzB;AACA,sBACI,QAAC,GAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEqB,OAAO,CAACV,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEU,OAAO,CAACb,GAAxB;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEO,kBAAkB,CAACO,QAAnB,EAAnB;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEL,YAAnB;AAAiC,wBAAW,iBAA5C;AAAA,oBACKH,eAAe,CAACS,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,gCACI,QAAC,GAAD;AAAK,cAAA,KAAK,EAAED,KAAK,CAACE,IAAlB;AACI,cAAA,KAAK,EAAED,KAAK,CAACH,QAAN;AADX,eAESG,KAFT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WANA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAUKX,eAAe,CAACS,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,8BACI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,KAAK,CAACH,QAAN,EAAjB;AAAA,mCACI;AAAK,cAAA,SAAS,EAAED,OAAO,CAACnB,UAAxB;AAAA,sCACI,QAAC,aAAD;AAAe,gBAAA,KAAK,EAAEY,eAAe,CAACC,kBAAD;AAArC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAED,eAAe,CAACC,kBAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAwCU,KAAxC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CApCM;;GAAMZ,U;UAMOb,S;;;KANPa,U","sourcesContent":["import { Token } from \"../Main\"\nimport React, { useState } from \"react\"\nimport { Box, makeStyles } from \"@material-ui/core\"\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\nimport { Tab } from \"@material-ui/core\"\nimport { WalletBalance } from \"./WalletBalance\"\nimport { StakeForm } from \"./StakeForm\"\n\ninterface YourWalletProps {\n    supportedTokens: Array<Token>\n}\n\nconst useStyles = makeStyles((theme) => ({\n    tabContent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: theme.spacing(4)\n    },\n    box: {\n        backgroundColor: \"white\",\n        borderRadius: \"25px\"\n    },\n    header: {\n        color: \"white\"\n    }\n}))\n\nexport const YourWallet = ({ supportedTokens }: YourWalletProps) => {\n    const [selectedTokenIndex, setSelectedTokenIndex] = useState<number>(0)\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setSelectedTokenIndex(parseInt(newValue))\n    }\n    const classes = useStyles()\n    return (\n        <Box>\n            <h1 className={classes.header}> Your Wallet! </h1>\n            <Box className={classes.box}>\n                <TabContext value={selectedTokenIndex.toString()}>\n                    <TabList onChange={handleChange} aria-label=\"stake form tabs\">\n                        {supportedTokens.map((token, index) => {\n                            return (\n                                <Tab label={token.name}\n                                    value={index.toString()}\n                                    key={index} />\n                            )\n                        })}\n                    </TabList>\n                    {supportedTokens.map((token, index) => {\n                        return (\n                            <TabPanel value={index.toString()} key={index}>\n                                <div className={classes.tabContent}>\n                                    <WalletBalance token={supportedTokens[selectedTokenIndex]} />\n                                    <StakeForm token={supportedTokens[selectedTokenIndex]} />\n                                </div>\n                            </TabPanel>\n                        )\n                    })}\n                </TabContext>\n            </Box>\n        </Box >\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}