{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const useEnterLottery = () => {\n  _s();\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n  const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface);\n  const {\n    send: enterLotterySend,\n    state: enterLotteryState\n  } = useContractFunction(artemLotteryContract, \"enterLottery\", {\n    transactionName: \"Enter lottery\"\n  });\n  return {\n    enterLotterySend,\n    enterLotteryState\n  };\n};\n\n_s(useEnterLottery, \"JBsS0SgEqf1XRtG5G22Rh6Eslng=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useEnterLottery.ts"],"names":["useEthers","useContractFunction","constants","utils","Contract","ArtemLottery","networkMapping","useEnterLottery","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","artemLotteryContract","send","enterLotterySend","state","enterLotteryState","transactionName"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,mBAApB,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUJ,YAAhB;AACA,QAAMK,mBAAmB,GAAGF,OAAO,GAAGF,cAAc,CAACK,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDN,SAAS,CAACU,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA9B;AACA,QAAMM,oBAAoB,GAAG,IAAIX,QAAJ,CACzBM,mBADyB,EAEzBG,qBAFyB,CAA7B;AAIA,QAAM;AAAEG,IAAAA,IAAI,EAAEC,gBAAR;AAA0BC,IAAAA,KAAK,EAAEC;AAAjC,MACFlB,mBAAmB,CAACc,oBAAD,EAAuB,cAAvB,EAAuC;AACtDK,IAAAA,eAAe,EAAE;AADqC,GAAvC,CADvB;AAKA,SAAO;AAAEH,IAAAA,gBAAF;AAAoBE,IAAAA;AAApB,GAAP;AAGH,CAjBM;;GAAMZ,e;UACWP,S,EAShBC,mB","sourcesContent":["import { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { Contract } from \"@ethersproject/contracts\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nexport const useEnterLottery = () => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n    const artemLotteryInterface = new utils.Interface(abi)\n    const artemLotteryContract = new Contract(\n        artemLotteryAddress,\n        artemLotteryInterface\n    )\n    const { send: enterLotterySend, state: enterLotteryState } =\n        useContractFunction(artemLotteryContract, \"enterLottery\", {\n            transactionName: \"Enter lottery\",\n        })\n\n    return { enterLotterySend, enterLotteryState }\n\n\n}"]},"metadata":{},"sourceType":"module"}