{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall } from \"@usedapp/core\";\nexport const useLotteryState = () => {\n  _s();\n\n  var _useContractCall;\n\n  // address\n  // abi\n  // chainId\n  //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n  const [lottery_state] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"lottery_state\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return lottery_state;\n}; // const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }\n\n_s(useLotteryState, \"CyeqBowMBQuAu1HzqGLZIvpyK4g=\", false, function () {\n  return [useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useLotteryState.ts"],"names":["useContractCall","useLotteryState","lottery_state","abi","artemLotteryInterface","address","artemLotteryAddress","method","args"],"mappings":";;AACA,SAAyCA,eAAzC,QAAgE,eAAhE;AAOA,OAAO,MAAMC,eAAe,GAAG,MAA6B;AAAA;;AAAA;;AACxD;AACA;AACA;AACA;AACA,QAAM,CAACC,aAAD,wBAAuBF,eAAe,CAAC;AACzCG,IAAAA,GAAG,EAAEC,qBADoC;AAEzCC,IAAAA,OAAO,EAAEC,mBAFgC;AAGzCC,IAAAA,MAAM,EAAE,eAHiC;AAIzCC,IAAAA,IAAI,EAAE;AAJmC,GAAD,CAAtC,+DAKA,EALN;AAOA,SAAON,aAAP;AACH,CAbM,C,CAiBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA3BaD,e;UAKoBD,e","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\n\nexport const useLotteryState = (): BigNumber | undefined => {\n    // address\n    // abi\n    // chainId\n    //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n    const [lottery_state]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"lottery_state\",\n        args: [],\n    }) ?? [];\n\n    return lottery_state;\n}\n\n\n\n// const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }"]},"metadata":{},"sourceType":"module"}