{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Up\"] = 1] = \"Up\";\n  Direction[Direction[\"Down\"] = 2] = \"Down\";\n  Direction[Direction[\"Left\"] = 3] = \"Left\";\n  Direction[Direction[\"Right\"] = 4] = \"Right\";\n})(Direction || (Direction = {}));\n\nexport const useLotteryState = () => {\n  _s();\n\n  var _useContractCall;\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n  const [lottery_state] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"lottery_state\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return lottery_state;\n};\n\n_s(useLotteryState, \"My0ConC8wq5+sD2i0i5tnHZ+TJ8=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useLotteryState.ts"],"names":["useEthers","useContractCall","constants","utils","ArtemLottery","networkMapping","Direction","useLotteryState","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","lottery_state","address","method","args"],"mappings":";;AAAA,SAASA,SAAT,EAAyCC,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;IAEKC,S;;WAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAOL,OAAO,MAAMC,eAAe,GAAG,MAA0B;AAAA;;AAAA;;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUL,YAAhB;AACA,QAAMM,mBAAmB,GAAGF,OAAO,GAAGH,cAAc,CAACM,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDN,SAAS,CAACU,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA9B;AAEA,QAAM,CAACM,aAAD,wBAAuBd,eAAe,CAAC;AACzCQ,IAAAA,GAAG,EAAEI,qBADoC;AAEzCG,IAAAA,OAAO,EAAEN,mBAFgC;AAGzCO,IAAAA,MAAM,EAAE,eAHiC;AAIzCC,IAAAA,IAAI,EAAE;AAJmC,GAAD,CAAtC,+DAKA,EALN;AASA,SAAOH,aAAP;AACH,CAhBM;;GAAMR,e;UACWP,S,EAKSC,e","sourcesContent":["import { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nenum Direction {\n    Up = 1,\n    Down,\n    Left,\n    Right,\n  }\n\nexport const useLotteryState = (): number | undefined => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n\n    const [lottery_state]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"lottery_state\",\n        args: [],\n    }) ?? [];\n\n    \n\n    return lottery_state;\n}"]},"metadata":{},"sourceType":"module"}