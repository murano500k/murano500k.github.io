{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nconst chainId = 42;\nconst {\n  abi\n} = ArtemLottery;\nconst artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\nconst artemLotteryInterface = new utils.Interface(abi);\nexport const useLotteryState = () => {\n  _s();\n\n  var _useContractCall;\n\n  // address\n  // abi\n  // chainId\n  //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n  const [lottery_state] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"lottery_state\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return lottery_state;\n}; // const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }\n\n_s(useLotteryState, \"CyeqBowMBQuAu1HzqGLZIvpyK4g=\", false, function () {\n  return [useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useLotteryState.ts"],"names":["useContractCall","constants","utils","ArtemLottery","networkMapping","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","useLotteryState","lottery_state","address","method","args"],"mappings":";;AACA,SAAyCA,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAUH,YAAhB;AACA,MAAMI,mBAAmB,GAAGF,OAAO,GAAGD,cAAc,CAACI,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDJ,SAAS,CAACQ,WAArG;AACA,MAAMC,qBAAqB,GAAG,IAAIR,KAAK,CAACS,SAAV,CAAoBL,GAApB,CAA9B;AAEA,OAAO,MAAMM,eAAe,GAAG,MAAuB;AAAA;;AAAA;;AAClD;AACA;AACA;AACA;AACA,QAAM,CAACC,aAAD,wBAAuBb,eAAe,CAAC;AACzCM,IAAAA,GAAG,EAAEI,qBADoC;AAEzCI,IAAAA,OAAO,EAAEP,mBAFgC;AAGzCQ,IAAAA,MAAM,EAAE,eAHiC;AAIzCC,IAAAA,IAAI,EAAE;AAJmC,GAAD,CAAtC,+DAKA,EALN;AAOA,SAAOH,aAAP;AACH,CAbM,C,CAiBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA3BaD,e;UAKoBZ,e","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nconst chainId = 42\nconst { abi } = ArtemLottery\nconst artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\nconst artemLotteryInterface = new utils.Interface(abi)\n\nexport const useLotteryState = (): Big | undefined => {\n    // address\n    // abi\n    // chainId\n    //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n    const [lottery_state]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"lottery_state\",\n        args: [],\n    }) ?? [];\n\n    return lottery_state;\n}\n\n\n\n// const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }"]},"metadata":{},"sourceType":"module"}