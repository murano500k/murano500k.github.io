{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const useEntranceFee = () => {\n  _s();\n\n  var _useContractCall;\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi);\n  const [enterFee] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"lotteryCounter\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return enterFee;\n};\n\n_s(useEntranceFee, \"My0ConC8wq5+sD2i0i5tnHZ+TJ8=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useEnterFee.ts"],"names":["useEthers","useContractCall","constants","utils","ArtemLottery","networkMapping","useEntranceFee","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","enterFee","address","method","args"],"mappings":";;AAAA,SAASA,SAAT,EAAyCC,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAA6B;AAAA;;AAAA;;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUJ,YAAhB;AACA,QAAMK,mBAAmB,GAAGF,OAAO,GAAGF,cAAc,CAACK,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDL,SAAS,CAACS,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIT,KAAK,CAACU,SAAV,CAAoBL,GAApB,CAA9B;AACA,QAAM,CAACM,QAAD,wBAAkBb,eAAe,CAAC;AACpCO,IAAAA,GAAG,EAAEI,qBAD+B;AAEpCG,IAAAA,OAAO,EAAEN,mBAF2B;AAGpCO,IAAAA,MAAM,EAAE,gBAH4B;AAIpCC,IAAAA,IAAI,EAAE;AAJ8B,GAAD,CAAjC,+DAKA,EALN;AAOA,SAAOH,QAAP;AACH,CAbM;;GAAMR,c;UACWN,S,EAIIC,e","sourcesContent":["import { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nexport const useEntranceFee = (): BigNumber | undefined => {\n    const { chainId } = useEthers()\n    const { abi } = ArtemLottery\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n    const [enterFee]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"lotteryCounter\",\n        args: [],\n    }) ?? []\n\n    return enterFee;\n}"]},"metadata":{},"sourceType":"module"}