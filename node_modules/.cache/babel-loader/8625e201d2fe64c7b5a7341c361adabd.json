{"ast":null,"code":"var _jsxFileName = \"/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/LotteryState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLotteryState, useLotteryBalance, useLotteryTimeStamp, useLotteryCounter, useRecentWinner } from \"../hooks\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.common.white,\n    textAlign: \"center\",\n    padding: theme.spacing(4)\n  },\n  subtitle: {\n    color: theme.palette.common.white,\n    textAlign: \"center\",\n    padding: theme.spacing(1)\n  }\n}));\nexport const LotteryState = () => {\n  _s();\n\n  const classes = useStyles();\n  const lotteryState = useLotteryState();\n  const balance = useLotteryBalance();\n  const counter = useLotteryCounter();\n  const lastTimeStamp = useLotteryTimeStamp();\n  const timstampForHumans = lastTimeStamp ? time_ago(new Date(lastTimeStamp * 1000).toString()) : \"No data\";\n  const recentWinner = useRecentWinner();\n  const lotteryDuration = 60 * 60 * 6; //useLotteryDuration()\n\n  console.log(\"lastTimestamp=\" + lastTimeStamp);\n  var nextTimestampForHumans = \"\";\n\n  if (lotteryState == \"open\") {\n    const nextTimestamp = lastTimeStamp + lotteryDuration;\n\n    if (new Date().getTime() >= nextTimestamp) {\n      nextTimestampForHumans = lastTimeStamp ? \"Next lottery in \" + time_ago(new Date(nextTimestamp * 1000).toString()) : \"No data\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" \", new Date().getTime(), \"Lottery is \", lotteryState, \" now. \", nextTimestampForHumans, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" Lottery balance is \", balance, \" ethers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" Recent winner is \", recentWinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" Lottery counter is \", counter ? counter.toNumber() : -10]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" last updated \", timstampForHumans]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.subtitle,\n      children: [\" Lottery duration is \", lotteryDuration, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LotteryState, \"Z4G10tt00Lut0Egg2nrXZu/vEhI=\", false, function () {\n  return [useStyles, useLotteryState, useLotteryBalance, useLotteryCounter, useLotteryTimeStamp, useRecentWinner];\n});\n\n_c = LotteryState;\n\nfunction time_ago(time) {\n  switch (typeof time) {\n    case 'number':\n      break;\n\n    case 'string':\n      time = +new Date(time);\n      break;\n\n    case 'object':\n      if (time.constructor === Date) time = time.getTime();\n      break;\n\n    default:\n      time = +new Date();\n  }\n\n  var time_formats = [[60, 'seconds', 1], // 60\n  [120, '1 minute ago', '1 minute from now'], // 60*2\n  [3600, 'minutes', 60], // 60*60, 60\n  [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n  [86400, 'hours', 3600], // 60*60*24, 60*60\n  [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n  [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n  [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n  [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n  [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n  [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n  [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n  [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n  [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n  [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n  ];\n  var seconds = (+new Date() - time) / 1000,\n      token = 'ago',\n      list_choice = 1;\n\n  if (seconds == 0) {\n    return 'Just now';\n  }\n\n  if (seconds < 0) {\n    seconds = Math.abs(seconds);\n    token = 'from now';\n    list_choice = 2;\n  }\n\n  var i = 0,\n      format;\n\n  while (format = time_formats[i++]) if (seconds < format[0]) {\n    if (typeof format[2] == 'string') return format[list_choice];else return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n  }\n\n  return time;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LotteryState\");","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/components/LotteryState.tsx"],"names":["useLotteryState","useLotteryBalance","useLotteryTimeStamp","useLotteryCounter","useRecentWinner","makeStyles","useStyles","theme","title","color","palette","common","white","textAlign","padding","spacing","subtitle","LotteryState","classes","lotteryState","balance","counter","lastTimeStamp","timstampForHumans","time_ago","Date","toString","recentWinner","lotteryDuration","console","log","nextTimestampForHumans","nextTimestamp","getTime","toNumber","time","constructor","time_formats","seconds","token","list_choice","Math","abs","i","format","floor"],"mappings":"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","sourcesContent":["import { useLotteryState, useLotteryBalance, useLotteryTimeStamp, useLotteryCounter, useRecentWinner } from \"../hooks\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { useLotteryDuration } from \"../hooks/useLotteryDuration\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n        padding: theme.spacing(4)\n    },\n    subtitle: {\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n        padding: theme.spacing(1)\n    },\n}))\n\nexport const LotteryState = () => {\n    const classes = useStyles()\n    const lotteryState = useLotteryState()\n    const balance = useLotteryBalance()\n    const counter = useLotteryCounter()\n    const lastTimeStamp = useLotteryTimeStamp()\n    const timstampForHumans = lastTimeStamp ? time_ago(new Date(lastTimeStamp * 1000).toString()) : \"No data\"\n    const recentWinner = useRecentWinner()\n    const lotteryDuration = 60 * 60 * 6 //useLotteryDuration()\n\n    console.log(\"lastTimestamp=\" + lastTimeStamp);\n\n    var nextTimestampForHumans = \"\"\n    if (lotteryState == \"open\") {\n        const nextTimestamp = lastTimeStamp + lotteryDuration\n        if (new Date().getTime() >= nextTimestamp) {\n            nextTimestampForHumans = lastTimeStamp ? \"Next lottery in \" + time_ago(new Date(nextTimestamp * 1000).toString()) : \"No data\"\n        }\n    }\n\n\n\n    return (\n        <>\n            <h2 className={classes.subtitle}> {new Date().getTime()}Lottery is {lotteryState} now. {nextTimestampForHumans} </h2>\n            <h2 className={classes.subtitle}> Lottery balance is {balance} ethers</h2>\n            <h2 className={classes.subtitle}> Recent winner is {recentWinner}</h2>\n            <h2 className={classes.subtitle}> Lottery counter is {counter ? counter.toNumber() : -10}</h2>\n            <h2 className={classes.subtitle}> last updated {timstampForHumans}</h2>\n            <h2 className={classes.subtitle}> Lottery duration is {lotteryDuration} seconds</h2>\n\n        </>)\n}\n\n\nfunction time_ago(time: any) {\n\n    switch (typeof time) {\n        case 'number':\n            break;\n        case 'string':\n            time = +new Date(time);\n            break;\n        case 'object':\n            if (time.constructor === Date) time = time.getTime();\n            break;\n        default:\n            time = +new Date();\n    }\n    var time_formats = [\n        [60, 'seconds', 1], // 60\n        [120, '1 minute ago', '1 minute from now'], // 60*2\n        [3600, 'minutes', 60], // 60*60, 60\n        [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n        [86400, 'hours', 3600], // 60*60*24, 60*60\n        [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n        [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n        [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n        [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n        [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n        [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n        [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n        [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n        [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n        [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n    ];\n    var seconds = (+new Date() - time) / 1000,\n        token = 'ago',\n        list_choice = 1;\n\n    if (seconds == 0) {\n        return 'Just now'\n    }\n    if (seconds < 0) {\n        seconds = Math.abs(seconds);\n        token = 'from now';\n        list_choice = 2;\n    }\n    var i = 0,\n        format;\n    while (format = time_formats[i++])\n        if (seconds < format[0]) {\n            if (typeof format[2] == 'string')\n                return format[list_choice];\n            else\n                return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n        }\n    return time;\n}"]},"metadata":{},"sourceType":"module"}