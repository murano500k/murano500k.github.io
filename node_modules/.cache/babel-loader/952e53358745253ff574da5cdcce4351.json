{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nexport const useLotteryBalance = () => {\n  _s();\n\n  var _useContractCall;\n\n  // address\n  // abi\n  // chainId\n  const chainId = 42;\n  const {\n    abi\n  } = ArtemLottery;\n  const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero;\n  const artemLotteryInterface = new utils.Interface(abi); //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n\n  const [balance] = (_useContractCall = useContractCall({\n    abi: artemLotteryInterface,\n    address: artemLotteryAddress,\n    method: \"balance\",\n    args: []\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return balance;\n}; // const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }\n\n_s(useLotteryBalance, \"CyeqBowMBQuAu1HzqGLZIvpyK4g=\", false, function () {\n  return [useContractCall];\n});","map":{"version":3,"sources":["/home/aradchenko/blockchain/smart_contract_token_lottery/front_end/src/hooks/useLotteryBalance.ts"],"names":["useContractCall","constants","utils","ArtemLottery","networkMapping","useLotteryBalance","chainId","abi","artemLotteryAddress","String","AddressZero","artemLotteryInterface","Interface","balance","address","method","args"],"mappings":";;AACA,SAAyCA,eAAzC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAA4C,QAA5C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAA6B;AAAA;;AAAA;;AAC1D;AACA;AACA;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,YAAhB;AACA,QAAMK,mBAAmB,GAAGF,OAAO,GAAGF,cAAc,CAACK,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,cAAhC,EAAgD,CAAhD,CAAH,GAAwDL,SAAS,CAACS,WAArG;AACA,QAAMC,qBAAqB,GAAG,IAAIT,KAAK,CAACU,SAAV,CAAoBL,GAApB,CAA9B,CAP0D,CAQ1D;;AACA,QAAM,CAACM,OAAD,wBAAiBb,eAAe,CAAC;AACnCO,IAAAA,GAAG,EAAEI,qBAD8B;AAEnCG,IAAAA,OAAO,EAAEN,mBAF0B;AAGnCO,IAAAA,MAAM,EAAE,SAH2B;AAInCC,IAAAA,IAAI,EAAE;AAJ6B,GAAD,CAAhC,+DAKA,EALN;AAOA,SAAOH,OAAP;AACH,CAjBM,C,CAmBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7BaR,iB;UAScL,e","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction, useContractCall } from \"@usedapp/core\"\nimport { constants, utils, BigNumber } from \"ethers\"\nimport ArtemLottery from \"../chain-info/contracts/ArtemLottery.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport networkMapping from \"../chain-info/deployments/map.json\"\n\nexport const useLotteryBalance = (): BigNumber | undefined => {\n    // address\n    // abi\n    // chainId\n    const chainId = 42;\n    const { abi } = ArtemLottery;\n    const artemLotteryAddress = chainId ? networkMapping[String(chainId)][\"ArtemLottery\"][0] : constants.AddressZero\n    const artemLotteryInterface = new utils.Interface(abi)\n    //const artemLotteryContract = new Contract(artemLotteryAddress, artemLotteryInterface)\n    const [balance]: any = useContractCall({\n        abi: artemLotteryInterface,\n        address: artemLotteryAddress,\n        method: \"balance\",\n        args: [],\n    }) ?? [];\n\n    return balance;\n}\n\n// const simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\n\n// export function useCount() {\n//     const [count]: any = useContractCall({\n//         abi: simpleContractInterface,\n//         address: simpleContractAddress,\n//         method: \"count\",\n//         args: [],\n//     }) ?? [];\n//     return count;\n// }"]},"metadata":{},"sourceType":"module"}