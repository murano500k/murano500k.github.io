{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_usdEntryFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recentWinner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "LotteryEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_shouldRestart",
          "type": "bool"
        }
      ],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlayersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDurationInSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_state",
      "outputs": [
        {
          "internalType": "enum ArtemLottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recentWinner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldRestart",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "1": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "3": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "4": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "5": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "7": "contracts/ArtemLottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/ArtemLottery.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        721
      ],
      "ArtemLottery": [
        450
      ],
      "Context": [
        762
      ],
      "KeeperCompatibleInterface": [
        740
      ],
      "LinkTokenInterface": [
        907
      ],
      "Ownable": [
        554
      ],
      "VRFConsumerBase": [
        675
      ],
      "VRFRequestIDBase": [
        812
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 676,
        "src": "57:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 555,
        "src": "117:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 722,
        "src": "170:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 741,
        "src": "247:80:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 675,
              "src": "354:15:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "354:15:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 554,
              "src": "371:7:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "371:7:7"
          },
          {
            "baseName": {
              "id": 10,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 740,
              "src": "380:25:7"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "380:25:7"
          }
        ],
        "canonicalName": "ArtemLottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          740,
          554,
          762,
          675,
          812
        ],
        "name": "ArtemLottery",
        "nameLocation": "338:12:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 14,
            "mutability": "constant",
            "name": "AUTO_RESTART_KEEPER",
            "nameLocation": "426:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "412:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "412:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "448:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 17,
            "mutability": "constant",
            "name": "START_ON_DEPLOY",
            "nameLocation": "473:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "459:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "459:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "491:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 20,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "527:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "502:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "502:15:7",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 19,
              "nodeType": "ArrayTypeName",
              "src": "502:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f8c70cf",
            "id": 22,
            "mutability": "mutable",
            "name": "recentWinner",
            "nameLocation": "563:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "540:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "540:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36013189",
            "id": 24,
            "mutability": "mutable",
            "name": "randomness",
            "nameLocation": "596:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "581:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 26,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nameLocation": "627:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "612:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "612:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "675:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "644:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "644:21:7"
              },
              "referencedDeclaration": 721,
              "src": "644:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ArtemLottery.LOTTERY_STATE",
            "id": 33,
            "members": [
              {
                "id": 30,
                "name": "OPEN",
                "nameLocation": "725:4:7",
                "nodeType": "EnumValue",
                "src": "725:4:7"
              },
              {
                "id": 31,
                "name": "CLOSED",
                "nameLocation": "739:6:7",
                "nodeType": "EnumValue",
                "src": "739:6:7"
              },
              {
                "id": 32,
                "name": "CALCULATING_WINNER",
                "nameLocation": "755:18:7",
                "nodeType": "EnumValue",
                "src": "755:18:7"
              }
            ],
            "name": "LOTTERY_STATE",
            "nameLocation": "701:13:7",
            "nodeType": "EnumDefinition",
            "src": "696:83:7"
          },
          {
            "constant": false,
            "functionSelector": "81447999",
            "id": 36,
            "mutability": "mutable",
            "name": "lottery_state",
            "nameLocation": "805:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "784:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
              "typeString": "enum ArtemLottery.LOTTERY_STATE"
            },
            "typeName": {
              "id": 35,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34,
                "name": "LOTTERY_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33,
                "src": "784:13:7"
              },
              "referencedDeclaration": 33,
              "src": "784:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                "typeString": "enum ArtemLottery.LOTTERY_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 38,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "839:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "824:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "824:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 40,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "863:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "848:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 39,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 44,
            "name": "RequestedRandomness",
            "nameLocation": "882:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "910:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "902:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:19:7"
            },
            "src": "876:45:7"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "LotteryEnded",
            "nameLocation": "933:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "971:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "955:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recentWinner",
                  "nameLocation": "998:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "990:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nameLocation": "1028:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1020:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:101:7"
            },
            "src": "927:120:7"
          },
          {
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "1080:89:7",
              "text": " Use an interval in seconds and a timestamp to slow execution of Upkeep"
            },
            "functionSelector": "621e3217",
            "id": 55,
            "mutability": "immutable",
            "name": "lotteryDurationInSeconds",
            "nameLocation": "1199:24:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1174:49:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1174:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f3b3b27",
            "id": 57,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "1244:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1229:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1229:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a4a6b4f",
            "id": 59,
            "mutability": "mutable",
            "name": "lotteryCounter",
            "nameLocation": "1278:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1263:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1263:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe2f96b0",
            "id": 61,
            "mutability": "mutable",
            "name": "shouldRestart",
            "nameLocation": "1310:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1298:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 60,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1298:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1590:360:7",
              "statements": [
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1600:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83,
                      "name": "_usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1614:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1600:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:26:7"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1636:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1676:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1654:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$721_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1654:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1636:58:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:58:7"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1704:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 93,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1720:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1720:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1704:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:36:7"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1750:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1756:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1750:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:10:7"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1770:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1780:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1770:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:18:7"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "lotteryDurationInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1798:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1825:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1798:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:35:7"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1843:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1859:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1859:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1843:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:31:7"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "lotteryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1884:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1901:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1884:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:18:7"
                },
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1912:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "START_ON_DEPLOY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1928:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1912:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1912:31:7"
                }
              ]
            },
            "id": 123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 78,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "1566:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 79,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1583:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 80,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 77,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 675,
                  "src": "1550:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1550:39:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "1359:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1351:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "1394:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1386:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "1427:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1419:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1450:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1442:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "1472:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1464:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_usdEntryFee",
                  "nameLocation": "1498:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1490:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1528:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1520:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:201:7"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:0:7"
            },
            "scope": 450,
            "src": "1330:620:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1988:194:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 127,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2029:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 128,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2046:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2046:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2029:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2021:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2083:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2083:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 136,
                            "name": "getEntranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "2096:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2096:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2083:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544821",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2114:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        },
                        "value": "Not enough ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2075:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 147,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2163:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2163:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2155:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2155:8:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2155:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2142:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2142:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:33:7"
                }
              ]
            },
            "functionSelector": "e97dcb62",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nameLocation": "1965:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1970:2:7"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:7"
            },
            "scope": 450,
            "src": "1956:226:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2244:324:7",
              "statements": [
                {
                  "assignments": [
                    null,
                    159,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 159,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2264:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "2257:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2257:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 163,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 160,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2279:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 720,
                      "src": "2279:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2254:58:7"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nameLocation": "2330:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "2322:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2322:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 168,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "2354:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2346:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2346:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2346:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2363:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "2363:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "2346:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2322:47:7"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nameLocation": "2481:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "2473:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2473:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 177,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2496:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2510:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2514:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "2510:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "2496:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 182,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2495:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 183,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2520:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2495:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2473:60:7"
                },
                {
                  "expression": {
                    "id": 186,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 176,
                    "src": "2550:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "2543:18:7"
                }
              ]
            },
            "functionSelector": "09bc33a7",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nameLocation": "2197:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:7"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2235:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2234:9:7"
            },
            "scope": 450,
            "src": "2188:380:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2677:237:7",
              "statements": [
                {
                  "assignments": [
                    196,
                    198,
                    200,
                    202,
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nameLocation": "2708:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2701:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2701:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2736:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2729:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2729:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nameLocation": "2763:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2755:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2755:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nameLocation": "2794:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2786:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2786:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nameLocation": "2824:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2817:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2817:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 205,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2852:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$721",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 720,
                      "src": "2852:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2687:198:7"
                },
                {
                  "expression": {
                    "id": 209,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "2902:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2895:12:7"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "2574:43:7",
              "text": " Returns the latest price"
            },
            "functionSelector": "8e15f473",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "2631:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2645:2:7"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2669:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2668:8:7"
            },
            "scope": 450,
            "src": "2622:292:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "2961:216:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 218,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2992:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 219,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3009:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3009:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2992:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742073746172742061206e6577206c6f74746572792079657421",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3043:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f28339c943e38971af61f71129bc568db91d1b5fe6baee3a0d4da6bc146bcf48",
                          "typeString": "literal_string \"Can't start a new lottery yet!\""
                        },
                        "value": "Can't start a new lottery yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f28339c943e38971af61f71129bc568db91d1b5fe6baee3a0d4da6bc146bcf48",
                          "typeString": "literal_string \"Can't start a new lottery yet!\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2971:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:114:7"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 225,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3095:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 226,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3111:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "3111:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3095:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:34:7"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 230,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3139:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 231,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3155:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3155:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3139:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3139:31:7"
                }
              ]
            },
            "functionSelector": "160344e2",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "2951:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2951:9:7"
              }
            ],
            "name": "startLottery",
            "nameLocation": "2929:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2941:2:7"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:0:7"
            },
            "scope": 450,
            "src": "2920:257:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "3241:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 244,
                        "name": "_shouldRestart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "3270:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 243,
                      "name": "endLotteryInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3251:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3251:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3251:34:7"
                }
              ]
            },
            "functionSelector": "3dd89b7f",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 240,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "3231:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3231:9:7"
              }
            ],
            "name": "endLottery",
            "nameLocation": "3192:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "_shouldRestart",
                  "nameLocation": "3208:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3203:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3203:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3202:21:7"
            },
            "returnParameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3241:0:7"
            },
            "scope": 450,
            "src": "3183:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "3356:372:7",
              "statements": [
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 253,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3366:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 254,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3382:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING_WINNER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3382:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3366:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:48:7"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "3432:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3424:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 258,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3424:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3444:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3424:21:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 262,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3459:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3459:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3476:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3459:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 274,
                  "nodeType": "IfStatement",
                  "src": "3455:92:7",
                  "trueBody": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "3479:68:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 266,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "3493:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 268,
                                "name": "keyhash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "3523:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 269,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3532:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 267,
                              "name": "requestRandomness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "3505:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) returns (bytes32)"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3505:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3493:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "3493:43:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 276,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3581:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 275,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3561:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "EmitStatement",
                  "src": "3556:35:7"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 279,
                      "name": "shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3601:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "_shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3617:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3601:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:30:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 283,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3645:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3645:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3663:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3645:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "IfStatement",
                  "src": "3641:81:7",
                  "trueBody": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "3666:56:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 288,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "3698:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3709:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 287,
                            "name": "fulfillRandomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              386
                            ],
                            "referencedDeclaration": 386,
                            "src": "3680:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3680:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:31:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endLotteryInternal",
            "nameLocation": "3307:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "_shouldRestart",
                  "nameLocation": "3331:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3326:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3325:21:7"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3356:0:7"
            },
            "scope": 450,
            "src": "3298:430:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              569
            ],
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "3840:745:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 304,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "3871:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 305,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3888:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "3888:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "3871:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3934:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3850:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:117:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:117:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 312,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "3985:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3999:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3985:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72616e646f6d206e6f7420666f756e64",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4002:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        },
                        "value": "random not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3977:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:44:7"
                },
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "indexOfWinner",
                      "nameLocation": "4039:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "4031:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4031:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 320,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "4055:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 321,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4069:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4069:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4055:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4031:52:7"
                },
                {
                  "expression": {
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 325,
                      "name": "recentWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4093:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 326,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4108:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "id": 327,
                        "name": "indexOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4116:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4108:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4093:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 332,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "4158:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 333,
                        "name": "recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4170:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 334,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4184:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 331,
                      "name": "LotteryEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4145:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4145:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "EmitStatement",
                  "src": "4140:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 342,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4235:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ArtemLottery_$450",
                                "typeString": "contract ArtemLottery"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ArtemLottery_$450",
                                "typeString": "contract ArtemLottery"
                              }
                            ],
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4227:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 340,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4227:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4227:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4227:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 337,
                        "name": "recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4205:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4205:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:44:7"
                },
                {
                  "expression": {
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 347,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "4276:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4308:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4286:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4290:15:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 349,
                          "nodeType": "ArrayTypeName",
                          "src": "4290:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4286:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "4276:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:34:7"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 355,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4320:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 356,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4336:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "4336:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "4320:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4320:36:7"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4366:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 361,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4382:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4382:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4366:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:31:7"
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 365,
                      "name": "lotteryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4407:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 366,
                        "name": "lotteryCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4424:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4441:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4424:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4407:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:35:7"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 371,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "4452:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "4465:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4452:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "4452:24:7"
                },
                {
                  "condition": {
                    "id": 375,
                    "name": "shouldRestart",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "4490:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "4486:93:7",
                  "trueBody": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "4505:74:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 376,
                            "name": "shouldRestart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "4519:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4535:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4519:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "4519:21:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 380,
                            "name": "startLottery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "4554:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4554:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "4554:14:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "3743:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 301,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3827:8:7"
            },
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "3769:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3761:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "3789:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3781:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3760:41:7"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3840:0:7"
            },
            "scope": 450,
            "src": "3734:851:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              733
            ],
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "4738:189:7",
              "statements": [
                {
                  "expression": {
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 396,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "4748:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 397,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4776:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4776:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 399,
                                  "name": "lastTimeStamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "4794:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4776:31:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 401,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4775:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 402,
                            "name": "lotteryDurationInSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4811:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4775:60:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 404,
                            "name": "lottery_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4851:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                              "typeString": "enum ArtemLottery.LOTTERY_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 405,
                              "name": "LOTTERY_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "4868:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$33_$",
                                "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                              }
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "4868:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LOTTERY_STATE_$33",
                              "typeString": "enum ArtemLottery.LOTTERY_STATE"
                            }
                          },
                          "src": "4851:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4775:111:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 409,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "4902:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4902:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4919:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4902:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4775:145:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4748:172:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4748:172:7"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "4600:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4663:8:7"
            },
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "4627:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4612:24:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4611:26:7"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "4694:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4689:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4689:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "4721:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4708:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4708:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4688:45:7"
            },
            "scope": 450,
            "src": "4591:336:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              739
            ],
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "5002:56:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "AUTO_RESTART_KEEPER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "5031:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 423,
                      "name": "endLotteryInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "5012:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:39:7"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "4942:13:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 421,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4993:8:7"
            },
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "4971:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "4956:26:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4955:28:7"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:0:7"
            },
            "scope": 450,
            "src": "4933:125:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "5116:45:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 435,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5141:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ArtemLottery_$450",
                            "typeString": "contract ArtemLottery"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ArtemLottery_$450",
                            "typeString": "contract ArtemLottery"
                          }
                        ],
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5133:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5133:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5133:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5133:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 432,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "5126:28:7"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "5073:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5083:2:7"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "5107:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5106:9:7"
            },
            "scope": 450,
            "src": "5064:97:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "5224:38:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 445,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "5241:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5241:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 444,
                  "id": 447,
                  "nodeType": "Return",
                  "src": "5234:21:7"
                }
              ]
            },
            "functionSelector": "a76594bf",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayersCount",
            "nameLocation": "5176:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5191:2:7"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "5215:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5215:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5214:9:7"
            },
            "scope": 450,
            "src": "5167:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 451,
        "src": "329:4935:7",
        "usedErrors": []
      }
    ],
    "src": "32:5233:7"
  },
  "bytecode": "",
  "bytecodeSha1": "77ebcc9c017d228803734bec84fa6649a9bc10d0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ArtemLottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "48": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "49": [
            9749,
            9777,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "7": {
        "ArtemLottery.enter": {
          "43": [
            2029,
            2064,
            true
          ],
          "44": [
            2083,
            2112,
            true
          ]
        },
        "ArtemLottery.fulfillRandomness": {
          "45": [
            3871,
            3920,
            true
          ],
          "46": [
            3985,
            4000,
            true
          ],
          "47": [
            4490,
            4503,
            false
          ]
        },
        "ArtemLottery.startLottery": {
          "42": [
            2992,
            3029,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "23": [
            2131,
            2148
          ],
          "24": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "1": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "16": [
            1926,
            1999
          ],
          "17": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "3": [
            659,
            676
          ]
        }
      },
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "11": [
            9741,
            9813
          ],
          "12": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "37": [
            7888,
            7975
          ],
          "39": [
            8718,
            8757
          ],
          "41": [
            8763,
            8802
          ]
        }
      },
      "3": {
        "VRFRequestIDBase.makeRequestId": {
          "40": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "38": [
            980,
            1058
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {
        "ArtemLottery.checkUpkeep": {
          "9": [
            4748,
            4920
          ]
        },
        "ArtemLottery.endLottery": {
          "7": [
            3251,
            3285
          ]
        },
        "ArtemLottery.endLotteryInternal": {
          "18": [
            3366,
            3414
          ],
          "19": [
            3493,
            3536
          ],
          "20": [
            3556,
            3591
          ],
          "21": [
            3601,
            3631
          ],
          "22": [
            3680,
            3711
          ]
        },
        "ArtemLottery.enter": {
          "13": [
            2021,
            2065
          ],
          "14": [
            2075,
            2132
          ],
          "15": [
            2142,
            2175
          ]
        },
        "ArtemLottery.fulfillRandomness": {
          "25": [
            3850,
            3967
          ],
          "26": [
            3977,
            4021
          ],
          "27": [
            4093,
            4130
          ],
          "28": [
            4140,
            4195
          ],
          "29": [
            4205,
            4249
          ],
          "30": [
            4276,
            4310
          ],
          "31": [
            4320,
            4356
          ],
          "32": [
            4366,
            4397
          ],
          "33": [
            4407,
            4442
          ],
          "34": [
            4452,
            4476
          ],
          "35": [
            4519,
            4540
          ],
          "36": [
            4554,
            4568
          ]
        },
        "ArtemLottery.getBalance": {
          "0": [
            5126,
            5154
          ]
        },
        "ArtemLottery.getPlayersCount": {
          "2": [
            5234,
            5255
          ]
        },
        "ArtemLottery.performUpkeep": {
          "8": [
            5012,
            5051
          ]
        },
        "ArtemLottery.startLottery": {
          "4": [
            2971,
            3085
          ],
          "5": [
            3095,
            3129
          ],
          "6": [
            3139,
            3170
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "329:4935:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:380;;;;;;;;;;;;;:::i;:::-;;;160:25:8;;;148:2;133:18;2188:380:7;;;;;;;;5064:97;;;;;;;;;;-1:-1:-1;5133:21:7;5064:97;;2920:257;;;;;;;;;;;;;:::i;:::-;;581:25;;;;;;;;;;;;;;;;3183:109;;;;;;;;;;-1:-1:-1;3183:109:7;;;;;:::i;:::-;;:::i;1229:28::-;;;;;;;;;;;;;;;;4933:125;;;;;;;;;;-1:-1:-1;4933:125:7;;;;;:::i;:::-;;:::i;1263:29::-;;;;;;;;;;;;;;;;540:35;;;;;;;;;;-1:-1:-1;540:35:7;;;;-1:-1:-1;;;;;540:35:7;;;;;;-1:-1:-1;;;;;1341:32:8;;;1323:51;;1311:2;1296:18;540:35:7;1161:219:8;1174:49:7;;;;;;;;;;;;;;;848:22;;;;;;;;;;;;;;;;4591:336;;;;;;;;;;-1:-1:-1;4591:336:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;784:34:7:-;;;;;;;;;;-1:-1:-1;784:34:7;;;;-1:-1:-1;;;784:34:7;;;;;;;;;;;;;:::i;612:26::-;;;;;;;;;;;;;;;;973:85:0;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;2622:292:7;;;;;;;;;;;;;:::i;9639:225:2:-;;;;;;;;;;-1:-1:-1;9639:225:2;;;;;:::i;:::-;;:::i;5167:95:7:-;;;;;;;;;;-1:-1:-1;5241:7:7;:14;5167:95;;824:18;;;;;;;;;;;;;;;;1956:226;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;502:32:7:-;;;;;;;;;;-1:-1:-1;502:32:7;;;;;:::i;:::-;;:::i;1298:25::-;;;;;;;;;;-1:-1:-1;1298:25:7;;;;;;;;;;;4109:14:8;;4102:22;4084:41;;4072:2;4057:18;1298:25:7;3944:187:8;2188:380:7;2235:7;2257:12;2279:15;;;;;;;;;-1:-1:-1;;;;;2279:15:7;-1:-1:-1;;;;;2279:31:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2254:58;;;;;;2322:21;2354:5;2363:6;2346:23;;;;:::i;:::-;2322:47;;2473:19;2520:13;2496:11;;2510:6;2496:20;;;;:::i;:::-;2495:38;;;;:::i;:::-;2473:60;2188:380;-1:-1:-1;;;;2188:380:7:o;2920:257::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;3009:20:7::1;2992:13;::::0;-1:-1:-1;;;2992:13:7;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;2971:114;;;::::0;-1:-1:-1;;;2971:114:7;;5923:2:8;2971:114:7::1;::::0;::::1;5905:21:8::0;5962:2;5942:18;;;5935:30;6001:32;5981:18;;;5974:60;6051:18;;2971:114:7::1;5721:354:8::0;2971:114:7::1;3095:13;:34:::0;;-1:-1:-1;;;;3095:34:7::1;::::0;;3155:15:::1;3139:13;:31:::0;2920:257::o;3183:109::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3251:34:7::1;3270:14;3251:18;:34::i;:::-;3183:109:::0;:::o;4933:125::-;5012:39;448:5;5012:18;:39::i;:::-;4933:125;;:::o;4591:336::-;4689:17;4708:24;4811;4794:13;;4776:15;:31;;;;:::i;:::-;4775:60;:111;;;;-1:-1:-1;4868:18:7;4851:13;;-1:-1:-1;;;4851:13:7;;;;:35;;;;;;;;:::i;:::-;;4775:111;:145;;;;-1:-1:-1;4902:7:7;:14;:18;;4775:145;4748:172;;4591:336;;;;;:::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2622:292:7:-;2669:6;2701:14;2729:12;2755:17;2786;2817:22;2852:15;;;;;;;;;-1:-1:-1;;;;;2852:15:7;-1:-1:-1;;;;;2852:31:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2687:198:7;;2622:292;-1:-1:-1;;;;;;;;;2622:292:7:o;9639:225:2:-;9749:10;-1:-1:-1;;;;;9763:14:2;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:2;;6412:2:8;9741:72:2;;;6394:21:8;6451:2;6431:18;;;6424:30;6490:33;6470:18;;;6463:61;6541:18;;9741:72:2;6210:355:8;9741:72:2;9819:40;9837:9;9848:10;9819:17;:40::i;1956:226:7:-;2046:18;2029:13;;-1:-1:-1;;;2029:13:7;;;;:35;;;;;;;;:::i;:::-;;2021:44;;;;;;2096:16;:14;:16::i;:::-;2083:9;:29;;2075:57;;;;-1:-1:-1;;;2075:57:7;;6772:2:8;2075:57:7;;;6754:21:8;6811:2;6791:18;;;6784:30;-1:-1:-1;;;6830:18:8;;;6823:45;6885:18;;2075:57:7;6570:339:8;2075:57:7;2142:7;:33;;;;;;;-1:-1:-1;2142:33:7;;;;;;;;-1:-1:-1;;;;;;2142:33:7;2163:10;2142:33;;;1956:226::o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;7116:2:8;1926:73:0::1;::::0;::::1;7098:21:8::0;7155:2;7135:18;;;7128:30;7194:34;7174:18;;;7167:62;-1:-1:-1;;;7245:18:8;;;7238:36;7291:19;;1926:73:0::1;6914:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;502:32:7:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:32:7;;-1:-1:-1;502:32:7;:::o;3298:430::-;3366:13;:48;;-1:-1:-1;;;;3366:48:7;-1:-1:-1;;;3366:48:7;;;3382:32;3459:14;-1:-1:-1;;;;3455:92:7;;;3505:31;3523:7;;3532:3;;3505:17;:31::i;:::-;3493:43;;3455:92;3561:30;;160:25:8;;;3561:30:7;;148:2:8;133:18;3561:30:7;;;;;;;3601:13;:30;;-1:-1:-1;;3601:30:7;;;;;;;3645:7;:14;-1:-1:-1;;3641:81:7;;3680:31;3698:9;3709:1;3680:17;:31::i;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;3734:851:7:-;3888:32;3871:13;;-1:-1:-1;;;3871:13:7;;;;:49;;;;;;;;:::i;:::-;;3850:117;;;;-1:-1:-1;;;3850:117:7;;7523:2:8;3850:117:7;;;7505:21:8;7562:2;7542:18;;;7535:30;-1:-1:-1;;;7581:18:8;;;7574:51;7642:18;;3850:117:7;7321:345:8;3850:117:7;3999:1;3985:11;:15;3977:44;;;;-1:-1:-1;;;3977:44:7;;7873:2:8;3977:44:7;;;7855:21:8;7912:2;7892:18;;;7885:30;-1:-1:-1;;;7931:18:8;;;7924:46;7987:18;;3977:44:7;7671:340:8;3977:44:7;4069:7;:14;4031:21;;4055:28;;:11;:28;:::i;:::-;4031:52;;4108:7;4116:13;4108:22;;;;;;;;:::i;:::-;;;;;;;;;;;;4093:12;:37;;-1:-1:-1;;;;;;4093:37:7;-1:-1:-1;;;;;4108:22:7;;;4093:37;;;;;4184:10;;4145:50;;;8447:51:8;;;8514:18;;;8507:34;4158:10:7;;4145:50;;8420:18:8;4145:50:7;;;;;;;4205:12;;:44;;-1:-1:-1;;;;;4205:12:7;;;;4227:21;4205:44;;;;;:12;:44;:12;:44;4227:21;4205:12;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4286:24:7;;;4308:1;4286:24;;;;;;;;;4276:34;;;:7;;:34;:::i;:::-;-1:-1:-1;4320:13:7;:36;;-1:-1:-1;;;;4320:36:7;-1:-1:-1;;;4320:36:7;;;4382:15;4366:13;:31;4424:14;;:18;;-1:-1:-1;4424:18:7;:::i;:::-;4407:14;:35;4452:10;:24;;;4490:13;;;;4486:93;;;4519:13;:21;;-1:-1:-1;;4519:21:7;;;4554:14;:12;:14::i;:::-;3840:745;3734:851;;:::o;7752:1055:2:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:2;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;8991:25:8;;;9047:2;9032:18;;9025:34;8979:2;8964:18;;8817:248;7931:43:2;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:2;8290:16;;;;;;;;;;;;1005:51:3;;;;;9941:25:8;;;9982:18;;;9975:34;;;8283:4:2;10025:18:8;;;10018:60;10094:18;;;;10087:34;;;1005:51:3;;;;;;;;;;9913:19:8;;;;1005:51:3;;;995:62;;;;;;;;;8737:16:2;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:3;;;;;10289:19:8;;;10324:12;;;10317:28;;;1600:41:3;;;;;;;;;10361:12:8;;;;1600:41:3;;;1590:52;;;;;8770:32:2;1443:204:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:118:8;282:5;275:13;268:21;261:5;258:32;248:60;;304:1;301;294:12;319:241;375:6;428:2;416:9;407:7;403:23;399:32;396:52;;;444:1;441;434:12;396:52;483:9;470:23;502:28;524:5;502:28;:::i;:::-;549:5;319:241;-1:-1:-1;;;319:241:8:o;565:591::-;635:6;643;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;752:9;739:23;781:18;822:2;814:6;811:14;808:34;;;838:1;835;828:12;808:34;876:6;865:9;861:22;851:32;;921:7;914:4;910:2;906:13;902:27;892:55;;943:1;940;933:12;892:55;983:2;970:16;1009:2;1001:6;998:14;995:34;;;1025:1;1022;1015:12;995:34;1070:7;1065:2;1056:6;1052:2;1048:15;1044:24;1041:37;1038:57;;;1091:1;1088;1081:12;1038:57;1122:2;1114:11;;;;;1144:6;;-1:-1:-1;565:591:8;;-1:-1:-1;;;;565:591:8:o;1567:471::-;1608:3;1646:5;1640:12;1673:6;1668:3;1661:19;1698:1;1708:162;1722:6;1719:1;1716:13;1708:162;;;1784:4;1840:13;;;1836:22;;1830:29;1812:11;;;1808:20;;1801:59;1737:12;1708:162;;;1888:6;1885:1;1882:13;1879:87;;;1954:1;1947:4;1938:6;1933:3;1929:16;1925:27;1918:38;1879:87;-1:-1:-1;2020:2:8;1999:15;-1:-1:-1;;1995:29:8;1986:39;;;;2027:4;1982:50;;1567:471;-1:-1:-1;;1567:471:8:o;2043:298::-;2226:6;2219:14;2212:22;2201:9;2194:41;2271:2;2266;2255:9;2251:18;2244:30;2175:4;2291:44;2331:2;2320:9;2316:18;2308:6;2291:44;:::i;2346:127::-;2407:10;2402:3;2398:20;2395:1;2388:31;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2478:344;2626:2;2611:18;;2659:1;2648:13;;2638:144;;2704:10;2699:3;2695:20;2692:1;2685:31;2739:4;2736:1;2729:15;2767:4;2764:1;2757:15;2638:144;2791:25;;;2478:344;:::o;3215:248::-;3283:6;3291;3344:2;3332:9;3323:7;3319:23;3315:32;3312:52;;;3360:1;3357;3350:12;3312:52;-1:-1:-1;;3383:23:8;;;3453:2;3438:18;;;3425:32;;-1:-1:-1;3215:248:8:o;3468:286::-;3527:6;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;3622:23;;-1:-1:-1;;;;;3674:31:8;;3664:42;;3654:70;;3720:1;3717;3710:12;3759:180;3818:6;3871:2;3859:9;3850:7;3846:23;3842:32;3839:52;;;3887:1;3884;3877:12;3839:52;-1:-1:-1;3910:23:8;;3759:180;-1:-1:-1;3759:180:8:o;4136:179::-;4214:13;;4267:22;4256:34;;4246:45;;4236:73;;4305:1;4302;4295:12;4236:73;4136:179;;;:::o;4320:473::-;4423:6;4431;4439;4447;4455;4508:3;4496:9;4487:7;4483:23;4479:33;4476:53;;;4525:1;4522;4515:12;4476:53;4548:39;4577:9;4548:39;:::i;:::-;4538:49;;4627:2;4616:9;4612:18;4606:25;4596:35;;4671:2;4660:9;4656:18;4650:25;4640:35;;4715:2;4704:9;4700:18;4694:25;4684:35;;4738:49;4782:3;4771:9;4767:19;4738:49;:::i;:::-;4728:59;;4320:473;;;;;;;;:::o;4798:127::-;4859:10;4854:3;4850:20;4847:1;4840:31;4890:4;4887:1;4880:15;4914:4;4911:1;4904:15;4930:168;4970:7;5036:1;5032;5028:6;5024:14;5021:1;5018:21;5013:1;5006:9;4999:17;4995:45;4992:71;;;5043:18;;:::i;:::-;-1:-1:-1;5083:9:8;;4930:168::o;5103:127::-;5164:10;5159:3;5155:20;5152:1;5145:31;5195:4;5192:1;5185:15;5219:4;5216:1;5209:15;5235:120;5275:1;5301;5291:35;;5306:18;;:::i;:::-;-1:-1:-1;5340:9:8;;5235:120::o;5360:356::-;5562:2;5544:21;;;5581:18;;;5574:30;5640:34;5635:2;5620:18;;5613:62;5707:2;5692:18;;5360:356::o;6080:125::-;6120:4;6148:1;6145;6142:8;6139:34;;;6153:18;;:::i;:::-;-1:-1:-1;6190:9:8;;6080:125::o;8016:112::-;8048:1;8074;8064:35;;8079:18;;:::i;:::-;-1:-1:-1;8113:9:8;;8016:112::o;8133:127::-;8194:10;8189:3;8185:20;8182:1;8175:31;8225:4;8222:1;8215:15;8249:4;8246:1;8239:15;8684:128;8724:3;8755:1;8751:6;8748:1;8745:13;8742:39;;;8761:18;;:::i;:::-;-1:-1:-1;8797:9:8;;8684:128::o;9070:385::-;9302:1;9298;9293:3;9289:11;9285:19;9277:6;9273:32;9262:9;9255:51;9342:6;9337:2;9326:9;9322:18;9315:34;9385:2;9380;9369:9;9365:18;9358:30;9236:4;9405:44;9445:2;9434:9;9430:18;9422:6;9405:44;:::i;:::-;9397:52;9070:385;-1:-1:-1;;;;;9070:385:8:o;9460:245::-;9527:6;9580:2;9568:9;9559:7;9555:23;9551:32;9548:52;;;9596:1;9593;9586:12;9548:52;9628:9;9622:16;9647:28;9669:5;9647:28;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price"
      },
      "lotteryDurationInSeconds()": {
        "notice": "Use an interval in seconds and a timestamp to slow execution of Upkeep"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    329,
    5264
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA76594BF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA76594BF EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xFE2F96B0 EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4A4A6B4F EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x621E3217 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x3DD89B7F EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x4DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x244 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP3 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x647 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x67D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x78E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x244 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x40D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x530 PUSH2 0xEB8 JUMP JUMPDEST EQ PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206E6577206C6F747465727920796574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x907 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x0 PUSH2 0x907 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x631 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62F PUSH2 0xEB8 JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x63E JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x67B PUSH1 0x0 PUSH2 0x98F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0x5D0 DUP3 DUP3 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7AE PUSH2 0xEB8 JUMP JUMPDEST EQ PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C0 PUSH2 0x41D JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F7567682045544821 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 LT ISZERO PUSH2 0x939 JUMPI PUSH2 0x936 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 LT PUSH2 0x5D0 JUMPI PUSH2 0x5D0 DUP2 PUSH1 0x1 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0xEB8 JUMP JUMPDEST EQ PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB481B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA99 SWAP1 DUP4 PUSH2 0x1074 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAAE JUMPI PUSH2 0xAAE PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP5 SWAP2 PUSH32 0xE3224B2C436D7C0F4FEDD354654E166662FEF1C5BB12C11C3894D584D1F42A61 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0xB6B SWAP2 PUSH1 0x2 SWAP2 PUSH2 0xD32 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE TIMESTAMP PUSH1 0x9 SSTORE PUSH1 0xA SLOAD PUSH2 0xB91 SWAP1 PUSH1 0x1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBB6 JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xBB6 PUSH2 0x4DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC2B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xCF5 SWAP1 PUSH1 0x1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x4D5 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD87 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD87 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD52 JUMP JUMPDEST POP PUSH2 0xD93 SWAP3 SWAP2 POP PUSH2 0xD97 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD98 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD7 DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE5A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xEF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9A DUP7 PUSH2 0xF5A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xFBD PUSH1 0x80 DUP8 ADD PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF9 PUSH2 0xFC9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0xFFE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x106F JUMPI PUSH2 0x106F PUSH2 0xFC9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1083 JUMPI PUSH2 0x1083 PUSH2 0xFFE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B1 PUSH2 0xFC9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x10DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDD7 DUP2 PUSH2 0xDAC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SELFBALANCE DUP8 0xEE INVALID PC CALLDATACOPY JUMP CODECOPY 0xB9 TIMESTAMP 0xA8 0xCB 0xB5 PUSH26 0x7C104E7C26B275F28870D866DCFCC23EE164736F6C634300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B"
    },
    "12": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA76594BF"
    },
    "36": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA76594BF"
    },
    "47": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x380"
    },
    "51": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "58": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x395"
    },
    "62": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE97DCB62"
    },
    "69": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AB"
    },
    "73": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B3"
    },
    "84": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF71D96CB"
    },
    "91": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D3"
    },
    "95": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "96": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFE2F96B0"
    },
    "102": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F3"
    },
    "106": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "107": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "111": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D4"
    },
    "122": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x81447999"
    },
    "129": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E9"
    },
    "133": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "134": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x88AB139A"
    },
    "140": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x317"
    },
    "144": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "145": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "146": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "155": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "156": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8E15F473"
    },
    "162": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34B"
    },
    "166": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "168": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "173": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x360"
    },
    "177": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "178": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "182": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4585E33B"
    },
    "189": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "GT",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4585E33B"
    },
    "200": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EE"
    },
    "204": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "206": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4A4A6B4F"
    },
    "211": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20E"
    },
    "215": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "216": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "217": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4F8C70CF"
    },
    "222": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x224"
    },
    "226": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "227": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "228": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x621E3217"
    },
    "233": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25C"
    },
    "237": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "238": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "239": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x69EBE78E"
    },
    "244": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x290"
    },
    "248": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "249": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "250": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E04FF0D"
    },
    "255": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A6"
    },
    "259": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "260": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "264": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "265": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "266": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9BC33A7"
    },
    "271": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "275": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "276": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "277": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x12065FE0"
    },
    "282": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178"
    },
    "286": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x160344E2"
    },
    "293": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B"
    },
    "297": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "298": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "299": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x36013189"
    },
    "304": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A2"
    },
    "308": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "309": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "310": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3DD89B7F"
    },
    "315": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8"
    },
    "319": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "320": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "321": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3F3B3B27"
    },
    "326": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "EQ",
      "path": "7"
    },
    "327": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D8"
    },
    "330": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "331": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "332": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "334": {
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "335": {
      "first_revert": true,
      "fn": null,
      "offset": [
        329,
        5264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "336": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "337": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "338": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "339": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "340": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15C"
    },
    "343": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "344": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "346": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "347": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "REVERT",
      "path": "7"
    },
    "348": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "349": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "POP",
      "path": "7"
    },
    "350": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "353": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41D"
    },
    "356": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMP",
      "path": "7"
    },
    "357": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "358": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "360": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "361": {
      "op": "SWAP1"
    },
    "362": {
      "op": "DUP2"
    },
    "363": {
      "op": "MSTORE"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "366": {
      "op": "ADD"
    },
    "367": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "368": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "370": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "371": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "372": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "373": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "SUB",
      "path": "7"
    },
    "374": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "375": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "RETURN",
      "path": "7"
    },
    "376": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "378": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "DUP1",
      "path": "7"
    },
    "379": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "380": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x184"
    },
    "383": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "384": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "386": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "DUP1",
      "path": "7"
    },
    "387": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "REVERT",
      "path": "7"
    },
    "388": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "389": {
      "op": "POP"
    },
    "390": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5133,
        5154
      ],
      "op": "SELFBALANCE",
      "path": "7",
      "statement": 0
    },
    "391": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "394": {
      "fn": "ArtemLottery.getBalance",
      "offset": [
        5064,
        5161
      ],
      "op": "JUMP",
      "path": "7"
    },
    "395": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "396": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "397": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "DUP1",
      "path": "7"
    },
    "398": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "399": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x197"
    },
    "402": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "403": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "405": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "DUP1",
      "path": "7"
    },
    "406": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "REVERT",
      "path": "7"
    },
    "407": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "408": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "POP",
      "path": "7"
    },
    "409": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "412": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "415": {
      "fn": "ArtemLottery.startLottery",
      "jump": "i",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "416": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "417": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "STOP",
      "path": "7"
    },
    "418": {
      "offset": [
        581,
        606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "419": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "420": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "DUP1",
      "path": "7"
    },
    "421": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "422": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AE"
    },
    "425": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "426": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "428": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "DUP1",
      "path": "7"
    },
    "429": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "REVERT",
      "path": "7"
    },
    "430": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "431": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "POP",
      "path": "7"
    },
    "432": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "435": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "437": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "438": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "DUP2",
      "path": "7"
    },
    "439": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        581,
        606
      ],
      "op": "JUMP",
      "path": "7"
    },
    "440": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "441": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "442": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "DUP1",
      "path": "7"
    },
    "443": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "444": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C4"
    },
    "447": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "448": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "450": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "DUP1",
      "path": "7"
    },
    "451": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "REVERT",
      "path": "7"
    },
    "452": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "453": {
      "op": "POP"
    },
    "454": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "457": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "460": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "461": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "463": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDBA"
    },
    "466": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "467": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "468": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x590"
    },
    "471": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "472": {
      "offset": [
        1229,
        1257
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "473": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "474": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "DUP1",
      "path": "7"
    },
    "475": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "476": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E4"
    },
    "479": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "480": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "482": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "DUP1",
      "path": "7"
    },
    "483": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "REVERT",
      "path": "7"
    },
    "484": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "485": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "POP",
      "path": "7"
    },
    "486": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "489": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "491": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "492": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "DUP2",
      "path": "7"
    },
    "493": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1229,
        1257
      ],
      "op": "JUMP",
      "path": "7"
    },
    "494": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "495": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "496": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "DUP1",
      "path": "7"
    },
    "497": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "498": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "501": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "502": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "504": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "DUP1",
      "path": "7"
    },
    "505": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "REVERT",
      "path": "7"
    },
    "506": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "511": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x209"
    },
    "514": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "515": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "517": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDDE"
    },
    "520": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "521": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "522": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5C6"
    },
    "525": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "526": {
      "offset": [
        1263,
        1292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "527": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "528": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "DUP1",
      "path": "7"
    },
    "529": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "530": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21A"
    },
    "533": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "534": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "536": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "DUP1",
      "path": "7"
    },
    "537": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "REVERT",
      "path": "7"
    },
    "538": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "539": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "POP",
      "path": "7"
    },
    "540": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "543": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "545": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "546": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "DUP2",
      "path": "7"
    },
    "547": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1263,
        1292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "548": {
      "offset": [
        540,
        575
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "549": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "550": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "DUP1",
      "path": "7"
    },
    "551": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "552": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x230"
    },
    "555": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "556": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "558": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "DUP1",
      "path": "7"
    },
    "559": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "REVERT",
      "path": "7"
    },
    "560": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "offset": [
        540,
        575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "564": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "565": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "568": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "offset": [
        540,
        575
      ],
      "op": "AND",
      "path": "7"
    },
    "578": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "DUP2",
      "path": "7"
    },
    "579": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "583": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        540,
        575
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "590": {
      "op": "SHL"
    },
    "591": {
      "op": "SUB"
    },
    "592": {
      "op": "SWAP1"
    },
    "593": {
      "op": "SWAP2"
    },
    "594": {
      "op": "AND"
    },
    "595": {
      "op": "DUP2"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "offset": [
        540,
        575
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F"
    },
    "603": {
      "op": "JUMP"
    },
    "604": {
      "offset": [
        1174,
        1223
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "605": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "606": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "DUP1",
      "path": "7"
    },
    "607": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "608": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x268"
    },
    "611": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "612": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "614": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "DUP1",
      "path": "7"
    },
    "615": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "REVERT",
      "path": "7"
    },
    "616": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "617": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "POP",
      "path": "7"
    },
    "618": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "621": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "654": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "DUP2",
      "path": "7"
    },
    "655": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1174,
        1223
      ],
      "op": "JUMP",
      "path": "7"
    },
    "656": {
      "offset": [
        848,
        870
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "657": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "658": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "DUP1",
      "path": "7"
    },
    "659": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "660": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29C"
    },
    "663": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "664": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "666": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "DUP1",
      "path": "7"
    },
    "667": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "REVERT",
      "path": "7"
    },
    "668": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "669": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "POP",
      "path": "7"
    },
    "670": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "673": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "675": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "676": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "DUP2",
      "path": "7"
    },
    "677": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        848,
        870
      ],
      "op": "JUMP",
      "path": "7"
    },
    "678": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "679": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "680": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "DUP1",
      "path": "7"
    },
    "681": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "682": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B2"
    },
    "685": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "686": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "688": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "DUP1",
      "path": "7"
    },
    "689": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "REVERT",
      "path": "7"
    },
    "690": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "695": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C1"
    },
    "698": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "699": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "701": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDDE"
    },
    "704": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMP",
      "path": "7"
    },
    "705": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "706": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D4"
    },
    "709": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMP",
      "path": "7"
    },
    "710": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "711": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "713": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "714": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F"
    },
    "717": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "718": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "719": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "720": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9D"
    },
    "723": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMP",
      "path": "7"
    },
    "724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x647"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "745": {
      "offset": [
        784,
        818
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "DUP1",
      "path": "7"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F5"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "DUP1",
      "path": "7"
    },
    "756": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "REVERT",
      "path": "7"
    },
    "757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "758": {
      "op": "POP"
    },
    "759": {
      "offset": [
        784,
        818
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30A"
    },
    "765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "offset": [
        784,
        818
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "DIV",
      "path": "7"
    },
    "773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "AND",
      "path": "7"
    },
    "776": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "DUP2",
      "path": "7"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "JUMP",
      "path": "7"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F"
    },
    "785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        784,
        818
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xECE"
    },
    "790": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        784,
        818
      ],
      "op": "JUMP",
      "path": "7"
    },
    "791": {
      "offset": [
        612,
        638
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "DUP1",
      "path": "7"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x323"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "DUP1",
      "path": "7"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "REVERT",
      "path": "7"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "POP",
      "path": "7"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "810": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "DUP2",
      "path": "7"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        612,
        638
      ],
      "op": "JUMP",
      "path": "7"
    },
    "813": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "815": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "816": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "817": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "820": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "821": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "823": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "824": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "825": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "829": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "843": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "844": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "845": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "DUP1",
      "path": "7"
    },
    "846": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "847": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x357"
    },
    "850": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "851": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "853": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "DUP1",
      "path": "7"
    },
    "854": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "REVERT",
      "path": "7"
    },
    "855": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "856": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "POP",
      "path": "7"
    },
    "857": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "860": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67D"
    },
    "863": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "i",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "864": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "865": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "866": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "867": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "868": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36C"
    },
    "871": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "872": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "874": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "875": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "2"
    },
    "876": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "881": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B"
    },
    "884": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "885": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "887": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF6"
    },
    "890": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "891": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "892": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "895": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "896": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "897": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "898": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "899": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "900": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38C"
    },
    "903": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "904": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "906": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "907": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "REVERT",
      "path": "7"
    },
    "908": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5241,
        5248
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x2"
    },
    "912": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5241,
        5255
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "913": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "916": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        5167,
        5262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "917": {
      "offset": [
        824,
        842
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "918": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "919": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "DUP1",
      "path": "7"
    },
    "920": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "921": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A1"
    },
    "924": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "925": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "927": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "DUP1",
      "path": "7"
    },
    "928": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "REVERT",
      "path": "7"
    },
    "929": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "930": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "POP",
      "path": "7"
    },
    "931": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "934": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "936": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "937": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "DUP2",
      "path": "7"
    },
    "938": {
      "fn": "ArtemLottery.getPlayersCount",
      "offset": [
        824,
        842
      ],
      "op": "JUMP",
      "path": "7"
    },
    "939": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1956,
        2182
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "940": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1956,
        2182
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "943": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1956,
        2182
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78E"
    },
    "946": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        1956,
        2182
      ],
      "op": "JUMP",
      "path": "7"
    },
    "947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BF"
    },
    "954": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "968": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF18"
    },
    "973": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x845"
    },
    "978": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "979": {
      "offset": [
        502,
        534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP1",
      "path": "7"
    },
    "982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DF"
    },
    "986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP1",
      "path": "7"
    },
    "990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "REVERT",
      "path": "7"
    },
    "991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3EE"
    },
    "999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF41"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        502,
        534
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8DD"
    },
    "1010": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        502,
        534
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1011": {
      "offset": [
        1298,
        1323
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1027": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x40D"
    },
    "1031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "AND",
      "path": "7"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1298,
        1323
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1041": {
      "op": "SWAP1"
    },
    "1042": {
      "op": "ISZERO"
    },
    "1043": {
      "op": "ISZERO"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "offset": [
        1298,
        1323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F"
    },
    "1052": {
      "op": "JUMP"
    },
    "1053": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1054": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2235,
        2242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1056": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2257,
        2269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1057": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1059": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1061": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1062": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1063": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1064": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1067": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "EXP",
      "path": "7"
    },
    "1068": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1069": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "DIV",
      "path": "7"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2294
      ],
      "op": "AND",
      "path": "7"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2310
      ],
      "op": "AND",
      "path": "7"
    },
    "1088": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2310
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "1093": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1095": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1096": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1097": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1102": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "AND",
      "path": "7"
    },
    "1103": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1105": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "SHL",
      "path": "7"
    },
    "1106": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1107": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1108": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1110": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ADD",
      "path": "7"
    },
    "1111": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1113": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1115": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1116": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1117": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1118": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "SUB",
      "path": "7"
    },
    "1119": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1120": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1121": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "GAS",
      "path": "7"
    },
    "1122": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1123": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1124": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1125": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1126": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x473"
    },
    "1129": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1130": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1131": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1133": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1134": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1135": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1136": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1138": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1139": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1140": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1141": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1142": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1143": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1144": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1146": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1147": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1148": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1150": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "NOT",
      "path": "7"
    },
    "1151": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1153": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1154": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ADD",
      "path": "7"
    },
    "1155": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "AND",
      "path": "7"
    },
    "1156": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1157": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ADD",
      "path": "7"
    },
    "1158": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1159": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1161": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1162": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1163": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1164": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "ADD",
      "path": "7"
    },
    "1165": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1166": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x497"
    },
    "1169": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1170": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1171": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF79"
    },
    "1174": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2279,
        2312
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1175": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2279,
        2312
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1176": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1177": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1178": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1179": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1180": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1181": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2312
      ],
      "op": "POP",
      "path": "7"
    },
    "1182": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2322,
        2343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1184": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2354,
        2359
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1185": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2363,
        2369
      ],
      "op": "PUSH5",
      "path": "7",
      "value": "0x2540BE400"
    },
    "1191": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2346,
        2369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B0"
    },
    "1194": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2346,
        2369
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1195": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2346,
        2369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1196": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2346,
        2369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFDF"
    },
    "1199": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2346,
        2369
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1200": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2346,
        2369
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1201": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2322,
        2369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1202": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2322,
        2369
      ],
      "op": "POP",
      "path": "7"
    },
    "1203": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2473,
        2492
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1205": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2520,
        2533
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1206": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2507
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1208": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2507
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1209": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2510,
        2516
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "1218": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4CB"
    },
    "1221": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2516
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1222": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2516
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1223": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFDF"
    },
    "1226": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2496,
        2516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1227": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2496,
        2516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1228": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2495,
        2533
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D5"
    },
    "1231": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2495,
        2533
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1232": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2495,
        2533
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1233": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2495,
        2533
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1014"
    },
    "1236": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2495,
        2533
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1237": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2495,
        2533
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1238": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2473,
        2533
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1239": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2188,
        2568
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "o",
      "offset": [
        2188,
        2568
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1245": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1246": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1248": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1258": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 3
    },
    "1259": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1260": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x510"
    },
    "1263": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1266": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1278": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1279": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1282": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1283": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1028"
    },
    "1286": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1287": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1288": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1290": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1291": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1292": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1294": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1297": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3009,
        3029
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x1"
    },
    "1299": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1301": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1308": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "DIV",
      "path": "7"
    },
    "1309": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1311": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3005
      ],
      "op": "AND",
      "path": "7"
    },
    "1312": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1314": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1315": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "GT",
      "path": "7"
    },
    "1316": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1317": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x530"
    },
    "1320": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1321": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x530"
    },
    "1324": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB8"
    },
    "1327": {
      "fn": "ArtemLottery.startLottery",
      "jump": "i",
      "offset": [
        2992,
        3029
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1328": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1329": {
      "branch": 42,
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2992,
        3029
      ],
      "op": "EQ",
      "path": "7"
    },
    "1330": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "1333": {
      "branch": 42,
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1334": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1336": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1345": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1348": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1350": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1351": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "ADD",
      "path": "7"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1357": {
      "op": "DUP3"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "op": "PUSH32",
      "value": "0x43616E27742073746172742061206E6577206C6F747465727920796574210000"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1395": {
      "op": "DUP3"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x507"
    },
    "1404": {
      "op": "JUMP"
    },
    "1405": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2971,
        3085
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1406": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3108
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x6"
    },
    "1408": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3129
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1409": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3129
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1414": {
      "op": "SHL"
    },
    "1415": {
      "op": "NOT"
    },
    "1416": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3129
      ],
      "op": "AND",
      "path": "7"
    },
    "1417": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3129
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1418": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3095,
        3129
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1419": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3155,
        3170
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 6
    },
    "1420": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3139,
        3152
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1422": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3139,
        3170
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1423": {
      "fn": "ArtemLottery.startLottery",
      "jump": "o",
      "offset": [
        2920,
        3177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1424": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1425": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1427": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1437": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1438": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1439": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BA"
    },
    "1442": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1443": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1445": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1454": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1455": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1457": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1458": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1461": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1462": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1028"
    },
    "1465": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1466": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1467": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3251,
        3285
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 7,
      "value": "0x5C3"
    },
    "1470": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3270,
        3284
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1471": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3251,
        3269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x907"
    },
    "1474": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3251,
        3285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1475": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3251,
        3285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1476": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3183,
        3292
      ],
      "op": "POP",
      "path": "7"
    },
    "1477": {
      "fn": "ArtemLottery.endLottery",
      "jump": "o",
      "offset": [
        3183,
        3292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1478": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1479": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        5012,
        5051
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 8,
      "value": "0x5D0"
    },
    "1482": {
      "offset": [
        448,
        453
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1484": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        5012,
        5030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x907"
    },
    "1487": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        5012,
        5051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1488": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        5012,
        5051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1489": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "POP",
      "path": "7"
    },
    "1490": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4933,
        5058
      ],
      "op": "POP",
      "path": "7"
    },
    "1491": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "o",
      "offset": [
        4933,
        5058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1492": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1493": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4689,
        4706
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1495": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4708,
        4732
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1497": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4811,
        4835
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 9,
      "value": "0x0"
    },
    "1530": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4794,
        4807
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1532": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4794,
        4807
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1533": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4791
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1534": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4807
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x607"
    },
    "1537": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4807
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1538": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4807
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1539": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4807
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x105D"
    },
    "1542": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4776,
        4807
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1543": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4776,
        4807
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1544": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4835
      ],
      "op": "GT",
      "path": "7"
    },
    "1545": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4886
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1546": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4886
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1547": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x631"
    },
    "1550": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4886
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4868,
        4886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1554": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1556": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1563": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "DIV",
      "path": "7"
    },
    "1564": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1566": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4864
      ],
      "op": "AND",
      "path": "7"
    },
    "1567": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1569": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1570": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "GT",
      "path": "7"
    },
    "1571": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1572": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x62F"
    },
    "1575": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1576": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x62F"
    },
    "1579": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB8"
    },
    "1582": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4851,
        4886
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1583": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1584": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4851,
        4886
      ],
      "op": "EQ",
      "path": "7"
    },
    "1585": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4886
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1586": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4920
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1587": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4920
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1588": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4920
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x63E"
    },
    "1591": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4920
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4902,
        4909
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1595": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4902,
        4916
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1596": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4902,
        4920
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1597": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4902,
        4920
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1598": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4775,
        4920
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1599": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4748,
        4920
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1600": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4748,
        4920
      ],
      "op": "POP",
      "path": "7"
    },
    "1601": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1602": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "POP",
      "path": "7"
    },
    "1603": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1604": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1605": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4591,
        4927
      ],
      "op": "POP",
      "path": "7"
    },
    "1606": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "o",
      "offset": [
        4591,
        4927
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1608": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1610": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "SUB"
    },
    "1619": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1620": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1621": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1622": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x671"
    },
    "1625": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1626": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1628": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1637": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1638": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1640": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1641": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1644": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1028"
    },
    "1648": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1649": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x67B"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98F"
    },
    "1658": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1660": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1661": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1662": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2669,
        2675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1664": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2701,
        2715
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1665": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2729,
        2741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1667": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2755,
        2772
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1668": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2786,
        2803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1670": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2817,
        2839
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1671": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1673": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1675": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1676": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1677": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1678": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1681": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "EXP",
      "path": "7"
    },
    "1682": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1683": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "DIV",
      "path": "7"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1690": {
      "op": "SHL"
    },
    "1691": {
      "op": "SUB"
    },
    "1692": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2867
      ],
      "op": "AND",
      "path": "7"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2883
      ],
      "op": "AND",
      "path": "7"
    },
    "1702": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "1707": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1709": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1710": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1711": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1716": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "AND",
      "path": "7"
    },
    "1717": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1719": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "SHL",
      "path": "7"
    },
    "1720": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1721": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1722": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1724": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ADD",
      "path": "7"
    },
    "1725": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1727": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1729": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1730": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1731": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1732": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "SUB",
      "path": "7"
    },
    "1733": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1734": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1735": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "GAS",
      "path": "7"
    },
    "1736": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1737": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1738": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1739": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1740": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D9"
    },
    "1743": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1744": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1745": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1747": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1748": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1749": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1750": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1752": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1753": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1754": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "POP",
      "path": "7"
    },
    "1755": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "POP",
      "path": "7"
    },
    "1756": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "POP",
      "path": "7"
    },
    "1757": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "POP",
      "path": "7"
    },
    "1758": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1760": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1761": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1762": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1764": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "NOT",
      "path": "7"
    },
    "1765": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1767": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1768": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ADD",
      "path": "7"
    },
    "1769": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "AND",
      "path": "7"
    },
    "1770": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1771": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ADD",
      "path": "7"
    },
    "1772": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1773": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1775": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1776": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "POP",
      "path": "7"
    },
    "1777": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1778": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "ADD",
      "path": "7"
    },
    "1779": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1780": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6FD"
    },
    "1783": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1784": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1785": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF79"
    },
    "1788": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "i",
      "offset": [
        2852,
        2885
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1789": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2852,
        2885
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2687,
        2885
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1792": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2687,
        2885
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1793": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2622,
        2914
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "op": "POP"
    },
    "1803": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "o",
      "offset": [
        2622,
        2914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1804": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1805": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 11
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "op": "SUB"
    },
    "1814": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1847": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "2"
    },
    "1848": {
      "branch": 49,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "2"
    },
    "1849": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x784"
    },
    "1852": {
      "branch": 49,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1853": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1855": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1864": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1869": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1870": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "2"
    },
    "1871": {
      "op": "MSTORE"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "MSTORE"
    },
    "1879": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1919": {
      "op": "ADD"
    },
    "1920": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "1923": {
      "op": "JUMP"
    },
    "1924": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1925": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x5D0"
    },
    "1928": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1929": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1930": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E1"
    },
    "1933": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1934": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1956,
        2182
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1935": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2046,
        2064
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x0"
    },
    "1937": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1939": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1946": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "DIV",
      "path": "7"
    },
    "1947": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1949": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2042
      ],
      "op": "AND",
      "path": "7"
    },
    "1950": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1952": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1953": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "GT",
      "path": "7"
    },
    "1954": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1955": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7AE"
    },
    "1958": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1959": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7AE"
    },
    "1962": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB8"
    },
    "1965": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        2029,
        2064
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1966": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1967": {
      "branch": 43,
      "fn": "ArtemLottery.enter",
      "offset": [
        2029,
        2064
      ],
      "op": "EQ",
      "path": "7"
    },
    "1968": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B8"
    },
    "1971": {
      "branch": 43,
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1972": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1974": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1975": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1976": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2021,
        2065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1977": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 14,
      "value": "0x7C0"
    },
    "1980": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2096,
        2110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41D"
    },
    "1983": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        2096,
        2112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1984": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2096,
        2112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1985": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2083,
        2092
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1986": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2083,
        2112
      ],
      "op": "LT",
      "path": "7"
    },
    "1987": {
      "branch": 44,
      "fn": "ArtemLottery.enter",
      "offset": [
        2083,
        2112
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1988": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x801"
    },
    "1991": {
      "branch": 44,
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1992": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1994": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2003": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2006": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2008": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2009": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "ADD",
      "path": "7"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2015": {
      "op": "DUP3"
    },
    "2016": {
      "op": "ADD"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F7567682045544821"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2036": {
      "op": "SHL"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x507"
    },
    "2048": {
      "op": "JUMP"
    },
    "2049": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2075,
        2132
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2050": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2149
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 15,
      "value": "0x2"
    },
    "2052": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2053": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2054": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2056": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2057": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "ADD",
      "path": "7"
    },
    "2058": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2059": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2062": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2063": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2064": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2065": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2066": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "2099": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "ADD",
      "path": "7"
    },
    "2100": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2101": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2108": {
      "op": "SHL"
    },
    "2109": {
      "op": "SUB"
    },
    "2110": {
      "op": "NOT"
    },
    "2111": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "AND",
      "path": "7"
    },
    "2112": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2163,
        2173
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2113": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "OR",
      "path": "7"
    },
    "2114": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2115": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2142,
        2175
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2116": {
      "fn": "ArtemLottery.enter",
      "jump": "o",
      "offset": [
        1956,
        2182
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2118": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2120": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2127": {
      "op": "SHL"
    },
    "2128": {
      "op": "SUB"
    },
    "2129": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2130": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2131": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2132": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86F"
    },
    "2135": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2136": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2138": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2147": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2148": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2150": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2151": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "2154": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2155": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1028"
    },
    "2158": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2159": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "op": "SUB"
    },
    "2168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "2169": {
      "branch": 48,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "2173": {
      "branch": 48,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2192": {
      "op": "MSTORE"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2197": {
      "op": "DUP3"
    },
    "2198": {
      "op": "ADD"
    },
    "2199": {
      "op": "MSTORE"
    },
    "2200": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2250": {
      "op": "DUP3"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "2259": {
      "op": "JUMP"
    },
    "2260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5C3"
    },
    "2264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98F"
    },
    "2268": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2269": {
      "offset": [
        502,
        534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2270": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "LT",
      "path": "7"
    },
    "2277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8ED"
    },
    "2280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2290": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2295": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "ADD",
      "path": "7"
    },
    "2297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "offset": [
        502,
        534
      ],
      "op": "AND",
      "path": "7"
    },
    "2307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        502,
        534
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "offset": [
        502,
        534
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2310": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        502,
        534
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2311": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3298,
        3728
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2312": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3379
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x6"
    },
    "2314": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2315": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "NOT"
    },
    "2322": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "AND",
      "path": "7"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "OR",
      "path": "7"
    },
    "2329": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2330": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3366,
        3414
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2331": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3382,
        3414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2333": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3459,
        3473
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2336": {
      "op": "SWAP1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "LT"
    },
    "2340": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3455,
        3547
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2341": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3455,
        3547
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x939"
    },
    "2344": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3455,
        3547
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2345": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3505,
        3536
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x936"
    },
    "2348": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3523,
        3530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2350": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3523,
        3530
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2351": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3532,
        3535
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2353": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3532,
        3535
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2354": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3505,
        3522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBBB"
    },
    "2357": {
      "fn": "ArtemLottery.endLotteryInternal",
      "jump": "i",
      "offset": [
        3505,
        3536
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2358": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3505,
        3536
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2359": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3493,
        3536
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2360": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3493,
        3536
      ],
      "op": "POP",
      "path": "7"
    },
    "2361": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3455,
        3547
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2362": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x40"
    },
    "2364": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2365": {
      "op": "DUP2"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "2401": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2407": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2408": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2409": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2410": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "SUB",
      "path": "7"
    },
    "2411": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2412": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3561,
        3591
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2413": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3614
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0xB"
    },
    "2415": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2416": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2419": {
      "op": "NOT"
    },
    "2420": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "AND",
      "path": "7"
    },
    "2421": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2422": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2423": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2424": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "OR",
      "path": "7"
    },
    "2425": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2426": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3601,
        3631
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2427": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3645,
        3652
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2429": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3645,
        3659
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "LT"
    },
    "2433": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3641,
        3722
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D0"
    },
    "2436": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3641,
        3722
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2437": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3680,
        3711
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0x5D0"
    },
    "2440": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3698,
        3707
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2441": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3709,
        3710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2443": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3680,
        3697
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9E1"
    },
    "2446": {
      "fn": "ArtemLottery.endLotteryInternal",
      "jump": "i",
      "offset": [
        3680,
        3711
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2447": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2448": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2450": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2451": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "op": "SUB"
    },
    "2460": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 23
    },
    "2461": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2462": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2469": {
      "op": "SHL"
    },
    "2470": {
      "op": "SUB"
    },
    "2471": {
      "op": "NOT"
    },
    "2472": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2473": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2474": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2475": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "2476": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2477": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2478": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2479": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "2481": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2482": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2483": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "2484": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2485": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2486": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2487": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2488": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2521": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2522": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2524": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2525": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2526": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2527": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2528": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2529": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3734,
        4585
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2530": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3888,
        3920
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x2"
    },
    "2532": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2534": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2541": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "DIV",
      "path": "7"
    },
    "2542": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2544": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3884
      ],
      "op": "AND",
      "path": "7"
    },
    "2545": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2547": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2548": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "GT",
      "path": "7"
    },
    "2549": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2550": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA01"
    },
    "2553": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2554": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA01"
    },
    "2557": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB8"
    },
    "2560": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        3871,
        3920
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2561": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2562": {
      "branch": 45,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3871,
        3920
      ],
      "op": "EQ",
      "path": "7"
    },
    "2563": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA46"
    },
    "2566": {
      "branch": 45,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2567": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2569": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2578": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2581": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2583": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2584": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "ADD",
      "path": "7"
    },
    "2585": {
      "op": "MSTORE"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2590": {
      "op": "DUP3"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "op": "MSTORE"
    },
    "2593": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2620": {
      "op": "DUP3"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "op": "MSTORE"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2625": {
      "op": "ADD"
    },
    "2626": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x507"
    },
    "2629": {
      "op": "JUMP"
    },
    "2630": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3850,
        3967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2631": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3999,
        4000
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x0"
    },
    "2633": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3985,
        3996
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2634": {
      "branch": 46,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3985,
        4000
      ],
      "op": "GT",
      "path": "7"
    },
    "2635": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA89"
    },
    "2638": {
      "branch": 46,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2639": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2641": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2648": {
      "op": "SHL"
    },
    "2649": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2650": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2653": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2655": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2656": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "ADD",
      "path": "7"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2662": {
      "op": "DUP3"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH16",
      "value": "0x1C985B991BDB481B9BDD08199BDD5B99"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2687": {
      "op": "DUP3"
    },
    "2688": {
      "op": "ADD"
    },
    "2689": {
      "op": "MSTORE"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x507"
    },
    "2696": {
      "op": "JUMP"
    },
    "2697": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3977,
        4021
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2698": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4069,
        4076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2700": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4069,
        4083
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2701": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4031,
        4052
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2703": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4031,
        4052
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2704": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA99"
    },
    "2707": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2708": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4055,
        4066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2709": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1074"
    },
    "2712": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2713": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2714": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4031,
        4083
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2715": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4031,
        4083
      ],
      "op": "POP",
      "path": "7"
    },
    "2716": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4115
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x2"
    },
    "2718": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4116,
        4129
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2719": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2720": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2721": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2722": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "LT",
      "path": "7"
    },
    "2723": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAAE"
    },
    "2726": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2727": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAAE"
    },
    "2730": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1088"
    },
    "2733": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4108,
        4130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2734": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2735": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2737": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2738": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2739": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2740": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2742": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2743": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2744": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2745": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2746": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "ADD",
      "path": "7"
    },
    "2747": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2748": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4105
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2750": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2751": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "op": "NOT"
    },
    "2761": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "AND",
      "path": "7"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "op": "SUB"
    },
    "2770": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2771": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2772": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4108,
        4130
      ],
      "op": "AND",
      "path": "7"
    },
    "2773": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2774": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2775": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "OR",
      "path": "7"
    },
    "2776": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2777": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4093,
        4130
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2778": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4184,
        4194
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x4"
    },
    "2780": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4184,
        4194
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2781": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2783": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2784": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2785": {
      "op": "SWAP3"
    },
    "2786": {
      "op": "DUP4"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "SWAP3"
    },
    "2789": {
      "op": "DUP3"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "MSTORE"
    },
    "2792": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4158,
        4168
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2793": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4158,
        4168
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2794": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE3224B2C436D7C0F4FEDD354654E166662FEF1C5BB12C11C3894D584D1F42A61"
    },
    "2827": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2828": {
      "op": "ADD"
    },
    "2829": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2831": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2832": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2833": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2834": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "SUB",
      "path": "7"
    },
    "2835": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2836": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4145,
        4195
      ],
      "op": "LOG2",
      "path": "7"
    },
    "2837": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x3"
    },
    "2839": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2840": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2842": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2849": {
      "op": "SHL"
    },
    "2850": {
      "op": "SUB"
    },
    "2851": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2852": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2853": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "AND",
      "path": "7"
    },
    "2854": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2855": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4227,
        4248
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "2856": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2857": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2858": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "2861": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "MUL",
      "path": "7"
    },
    "2862": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2863": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2865": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2866": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2867": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2868": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4227,
        4248
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2869": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4217
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2870": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2871": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "CALL",
      "path": "7"
    },
    "2872": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2873": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "POP",
      "path": "7"
    },
    "2874": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "POP",
      "path": "7"
    },
    "2875": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "POP",
      "path": "7"
    },
    "2876": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "POP",
      "path": "7"
    },
    "2877": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2878": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2879": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2880": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB4D"
    },
    "2883": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2884": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2885": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2887": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2888": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2889": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2890": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2892": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2893": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4205,
        4249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2894": {
      "op": "POP"
    },
    "2895": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x40"
    },
    "2897": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2898": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2899": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4308,
        4309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2901": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2902": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2903": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2905": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2906": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "ADD",
      "path": "7"
    },
    "2907": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2908": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2909": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2910": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4286,
        4310
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2911": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4310
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2912": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4310
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6B"
    },
    "2915": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4310
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2916": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4283
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2918": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4283
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2919": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4310
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD32"
    },
    "2922": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4276,
        4310
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2923": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4276,
        4310
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4333
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x6"
    },
    "2927": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2928": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2933": {
      "op": "SHL"
    },
    "2934": {
      "op": "NOT"
    },
    "2935": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "AND",
      "path": "7"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "OR",
      "path": "7"
    },
    "2942": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2943": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4320,
        4356
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2944": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4382,
        4397
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 32
    },
    "2945": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4366,
        4379
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2947": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4366,
        4397
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2948": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4438
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0xA"
    },
    "2950": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4438
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2951": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4442
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB91"
    },
    "2954": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4442
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4442
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x109E"
    },
    "2960": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4424,
        4442
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2961": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4424,
        4442
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2962": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4407,
        4421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2964": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4407,
        4442
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2965": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4452,
        4462
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x4"
    },
    "2967": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4452,
        4476
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2968": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4452,
        4476
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2969": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4452,
        4476
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2970": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4490,
        4503
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2972": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4490,
        4503
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2973": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4490,
        4503
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2975": {
      "branch": 47,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4490,
        4503
      ],
      "op": "AND",
      "path": "7"
    },
    "2976": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4486,
        4579
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2977": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4486,
        4579
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB6"
    },
    "2980": {
      "branch": 47,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4486,
        4579
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2981": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4532
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0xB"
    },
    "2983": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4540
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2984": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4540
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2987": {
      "op": "NOT"
    },
    "2988": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4540
      ],
      "op": "AND",
      "path": "7"
    },
    "2989": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4540
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2990": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4519,
        4540
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2991": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4554,
        4568
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 36,
      "value": "0xBB6"
    },
    "2994": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4554,
        4566
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "2997": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4554,
        4568
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2998": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4554,
        4568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2999": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3840,
        4585
      ],
      "op": "POP",
      "path": "7"
    },
    "3000": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3734,
        4585
      ],
      "op": "POP",
      "path": "7"
    },
    "3001": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3734,
        4585
      ],
      "op": "POP",
      "path": "7"
    },
    "3002": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        3734,
        4585
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3003": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3006": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3045": {
      "op": "SHL"
    },
    "3046": {
      "op": "SUB"
    },
    "3047": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "2"
    },
    "3048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4000AEA0"
    },
    "3053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "3086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3088": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "2"
    },
    "3096": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2B"
    },
    "3099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3102": {
      "op": "SWAP2"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "MSTORE"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "op": "DUP3"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "SWAP1"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3123": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3130": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3135": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "2"
    },
    "3144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3145": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC58"
    },
    "3152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B6"
    },
    "3159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3163": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3166": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "2"
    },
    "3169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3173": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "2"
    },
    "3174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "2"
    },
    "3175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3176": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3177": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3178": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC77"
    },
    "3181": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3182": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3187": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3188": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3191": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3192": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3195": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3196": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3200": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3202": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "2"
    },
    "3203": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3205": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3206": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3208": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3209": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3215": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3218": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9B"
    },
    "3221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3222": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E6"
    },
    "3226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3231": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3233": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3234": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3245": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 38
    },
    "3246": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3248": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3249": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3250": {
      "op": "DUP9"
    },
    "3251": {
      "op": "SWAP1"
    },
    "3252": {
      "op": "MSTORE"
    },
    "3253": {
      "op": "DUP1"
    },
    "3254": {
      "op": "DUP4"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "DUP6"
    },
    "3257": {
      "op": "SWAP1"
    },
    "3258": {
      "op": "MSTORE"
    },
    "3259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3267": {
      "op": "DUP1"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "DUP4"
    },
    "3271": {
      "op": "SWAP1"
    },
    "3272": {
      "op": "MSTORE"
    },
    "3273": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3274": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3275": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3276": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3277": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "3"
    },
    "3278": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3279": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3280": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3281": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3282": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SWAP1"
    },
    "3286": {
      "op": "SWAP2"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3289": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3290": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3291": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3292": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3293": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3294": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3295": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "3"
    },
    "3296": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3297": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3298": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3299": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3300": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 39
    },
    "3301": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3302": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3304": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3305": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF5"
    },
    "3310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x109E"
    },
    "3316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3317": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3318": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3321": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3322": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3325": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3327": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3332": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3333": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3334": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3337": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3338": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 40
    },
    "3339": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3340": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3341": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3342": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3343": {
      "op": "DUP8"
    },
    "3344": {
      "op": "SWAP1"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "DUP1"
    },
    "3347": {
      "op": "DUP3"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "DUP5"
    },
    "3350": {
      "op": "SWAP1"
    },
    "3351": {
      "op": "MSTORE"
    },
    "3352": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3353": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3354": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3355": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3356": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "3"
    },
    "3357": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3358": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3359": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3360": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3363": {
      "op": "SWAP1"
    },
    "3364": {
      "op": "SWAP2"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3367": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3368": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3369": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3370": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3371": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3372": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "3"
    },
    "3373": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0x4D5"
    },
    "3377": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "DUP3"
    },
    "3380": {
      "op": "DUP1"
    },
    "3381": {
      "op": "SLOAD"
    },
    "3382": {
      "op": "DUP3"
    },
    "3383": {
      "op": "DUP3"
    },
    "3384": {
      "op": "SSTORE"
    },
    "3385": {
      "op": "SWAP1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "KECCAK256"
    },
    "3394": {
      "op": "SWAP1"
    },
    "3395": {
      "op": "DUP2"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "SWAP3"
    },
    "3398": {
      "op": "DUP3"
    },
    "3399": {
      "op": "ISZERO"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3403": {
      "op": "JUMPI"
    },
    "3404": {
      "op": "SWAP2"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3407": {
      "op": "MUL"
    },
    "3408": {
      "op": "DUP3"
    },
    "3409": {
      "op": "ADD"
    },
    "3410": {
      "op": "JUMPDEST"
    },
    "3411": {
      "op": "DUP3"
    },
    "3412": {
      "op": "DUP2"
    },
    "3413": {
      "op": "GT"
    },
    "3414": {
      "op": "ISZERO"
    },
    "3415": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3418": {
      "op": "JUMPI"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "MLOAD"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "SLOAD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3429": {
      "op": "SHL"
    },
    "3430": {
      "op": "SUB"
    },
    "3431": {
      "op": "NOT"
    },
    "3432": {
      "op": "AND"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "op": "SUB"
    },
    "3441": {
      "op": "SWAP1"
    },
    "3442": {
      "op": "SWAP2"
    },
    "3443": {
      "op": "AND"
    },
    "3444": {
      "op": "OR"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "SSTORE"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3449": {
      "op": "SWAP1"
    },
    "3450": {
      "op": "SWAP3"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "SWAP2"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3455": {
      "op": "SWAP1"
    },
    "3456": {
      "op": "SWAP2"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "SWAP1"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xD52"
    },
    "3462": {
      "op": "JUMP"
    },
    "3463": {
      "op": "JUMPDEST"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3468": {
      "op": "SWAP3"
    },
    "3469": {
      "op": "SWAP2"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD97"
    },
    "3474": {
      "jump": "i",
      "op": "JUMP"
    },
    "3475": {
      "op": "JUMPDEST"
    },
    "3476": {
      "op": "POP"
    },
    "3477": {
      "op": "SWAP1"
    },
    "3478": {
      "jump": "o",
      "op": "JUMP"
    },
    "3479": {
      "op": "JUMPDEST"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "DUP1"
    },
    "3482": {
      "op": "DUP3"
    },
    "3483": {
      "op": "GT"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3488": {
      "op": "JUMPI"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3491": {
      "op": "DUP2"
    },
    "3492": {
      "op": "SSTORE"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3499": {
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "DUP1"
    },
    "3502": {
      "op": "ISZERO"
    },
    "3503": {
      "op": "ISZERO"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "EQ"
    },
    "3506": {
      "op": "PUSH2",
      "value": "0x5C3"
    },
    "3509": {
      "op": "JUMPI"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "REVERT"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "op": "SLT"
    },
    "3523": {
      "op": "ISZERO"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xDCC"
    },
    "3527": {
      "op": "JUMPI"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "REVERT"
    },
    "3532": {
      "op": "JUMPDEST"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "CALLDATALOAD"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3542": {
      "jump": "i",
      "op": "JUMP"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "SWAP4"
    },
    "3545": {
      "op": "SWAP3"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "jump": "o",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3553": {
      "op": "DUP1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3556": {
      "op": "DUP4"
    },
    "3557": {
      "op": "DUP6"
    },
    "3558": {
      "op": "SUB"
    },
    "3559": {
      "op": "SLT"
    },
    "3560": {
      "op": "ISZERO"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDF1"
    },
    "3564": {
      "op": "JUMPI"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "DUP1"
    },
    "3568": {
      "op": "REVERT"
    },
    "3569": {
      "op": "JUMPDEST"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "CALLDATALOAD"
    },
    "3572": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3581": {
      "op": "DUP1"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "GT"
    },
    "3584": {
      "op": "ISZERO"
    },
    "3585": {
      "op": "PUSH2",
      "value": "0xE09"
    },
    "3588": {
      "op": "JUMPI"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3591": {
      "op": "DUP1"
    },
    "3592": {
      "op": "REVERT"
    },
    "3593": {
      "op": "JUMPDEST"
    },
    "3594": {
      "op": "DUP2"
    },
    "3595": {
      "op": "DUP6"
    },
    "3596": {
      "op": "ADD"
    },
    "3597": {
      "op": "SWAP2"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "DUP6"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3602": {
      "op": "DUP4"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "op": "SLT"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE1D"
    },
    "3608": {
      "op": "JUMPI"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3611": {
      "op": "DUP1"
    },
    "3612": {
      "op": "REVERT"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "DUP2"
    },
    "3615": {
      "op": "CALLDATALOAD"
    },
    "3616": {
      "op": "DUP2"
    },
    "3617": {
      "op": "DUP2"
    },
    "3618": {
      "op": "GT"
    },
    "3619": {
      "op": "ISZERO"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3623": {
      "op": "JUMPI"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3626": {
      "op": "DUP1"
    },
    "3627": {
      "op": "REVERT"
    },
    "3628": {
      "op": "JUMPDEST"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3632": {
      "op": "DUP3"
    },
    "3633": {
      "op": "DUP6"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "GT"
    },
    "3637": {
      "op": "ISZERO"
    },
    "3638": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3641": {
      "op": "JUMPI"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3644": {
      "op": "DUP1"
    },
    "3645": {
      "op": "REVERT"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3649": {
      "op": "SWAP3"
    },
    "3650": {
      "op": "SWAP1"
    },
    "3651": {
      "op": "SWAP3"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "SWAP7"
    },
    "3654": {
      "op": "SWAP2"
    },
    "3655": {
      "op": "SWAP6"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "SWAP1"
    },
    "3658": {
      "op": "SWAP4"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "jump": "o",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3667": {
      "op": "DUP2"
    },
    "3668": {
      "op": "MLOAD"
    },
    "3669": {
      "op": "DUP1"
    },
    "3670": {
      "op": "DUP5"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "op": "JUMPDEST"
    },
    "3675": {
      "op": "DUP2"
    },
    "3676": {
      "op": "DUP2"
    },
    "3677": {
      "op": "LT"
    },
    "3678": {
      "op": "ISZERO"
    },
    "3679": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3682": {
      "op": "JUMPI"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "op": "DUP2"
    },
    "3686": {
      "op": "DUP6"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "DUP2"
    },
    "3689": {
      "op": "ADD"
    },
    "3690": {
      "op": "MLOAD"
    },
    "3691": {
      "op": "DUP7"
    },
    "3692": {
      "op": "DUP4"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "PUSH2",
      "value": "0xE5A"
    },
    "3701": {
      "op": "JUMP"
    },
    "3702": {
      "op": "JUMPDEST"
    },
    "3703": {
      "op": "DUP2"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "GT"
    },
    "3706": {
      "op": "ISZERO"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "3710": {
      "op": "JUMPI"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3715": {
      "op": "DUP4"
    },
    "3716": {
      "op": "DUP8"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "MSTORE"
    },
    "3720": {
      "op": "JUMPDEST"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3727": {
      "op": "NOT"
    },
    "3728": {
      "op": "AND"
    },
    "3729": {
      "op": "SWAP3"
    },
    "3730": {
      "op": "SWAP1"
    },
    "3731": {
      "op": "SWAP3"
    },
    "3732": {
      "op": "ADD"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "SWAP3"
    },
    "3737": {
      "op": "SWAP2"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "jump": "o",
      "op": "JUMP"
    },
    "3741": {
      "op": "JUMPDEST"
    },
    "3742": {
      "op": "DUP3"
    },
    "3743": {
      "op": "ISZERO"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "DUP2"
    },
    "3746": {
      "op": "MSTORE"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3751": {
      "op": "DUP3"
    },
    "3752": {
      "op": "ADD"
    },
    "3753": {
      "op": "MSTORE"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3756": {
      "op": "PUSH2",
      "value": "0x4D5"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3761": {
      "op": "DUP4"
    },
    "3762": {
      "op": "ADD"
    },
    "3763": {
      "op": "DUP5"
    },
    "3764": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3767": {
      "jump": "i",
      "op": "JUMP"
    },
    "3768": {
      "op": "JUMPDEST"
    },
    "3769": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3776": {
      "op": "SHL"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3784": {
      "op": "MSTORE"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "REVERT"
    },
    "3790": {
      "op": "JUMPDEST"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3793": {
      "op": "DUP2"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3797": {
      "op": "DUP4"
    },
    "3798": {
      "op": "LT"
    },
    "3799": {
      "op": "PUSH2",
      "value": "0xEF0"
    },
    "3802": {
      "op": "JUMPI"
    },
    "3803": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "REVERT"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "SWAP2"
    },
    "3826": {
      "op": "SWAP1"
    },
    "3827": {
      "op": "MSTORE"
    },
    "3828": {
      "op": "SWAP1"
    },
    "3829": {
      "jump": "o",
      "op": "JUMP"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3836": {
      "op": "DUP4"
    },
    "3837": {
      "op": "DUP6"
    },
    "3838": {
      "op": "SUB"
    },
    "3839": {
      "op": "SLT"
    },
    "3840": {
      "op": "ISZERO"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "CALLDATALOAD"
    },
    "3854": {
      "op": "SWAP3"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3857": {
      "op": "SWAP1"
    },
    "3858": {
      "op": "SWAP2"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "op": "CALLDATALOAD"
    },
    "3861": {
      "op": "SWAP2"
    },
    "3862": {
      "op": "POP"
    },
    "3863": {
      "jump": "o",
      "op": "JUMP"
    },
    "3864": {
      "op": "JUMPDEST"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3869": {
      "op": "DUP3"
    },
    "3870": {
      "op": "DUP5"
    },
    "3871": {
      "op": "SUB"
    },
    "3872": {
      "op": "SLT"
    },
    "3873": {
      "op": "ISZERO"
    },
    "3874": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3877": {
      "op": "JUMPI"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3880": {
      "op": "DUP1"
    },
    "3881": {
      "op": "REVERT"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "DUP2"
    },
    "3884": {
      "op": "CALLDATALOAD"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "SUB"
    },
    "3893": {
      "op": "DUP2"
    },
    "3894": {
      "op": "AND"
    },
    "3895": {
      "op": "DUP2"
    },
    "3896": {
      "op": "EQ"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP1"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "DUP5"
    },
    "3912": {
      "op": "SUB"
    },
    "3913": {
      "op": "SLT"
    },
    "3914": {
      "op": "ISZERO"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF53"
    },
    "3918": {
      "op": "JUMPI"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3921": {
      "op": "DUP1"
    },
    "3922": {
      "op": "REVERT"
    },
    "3923": {
      "op": "JUMPDEST"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "CALLDATALOAD"
    },
    "3926": {
      "op": "SWAP2"
    },
    "3927": {
      "op": "SWAP1"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "jump": "o",
      "op": "JUMP"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "DUP1"
    },
    "3932": {
      "op": "MLOAD"
    },
    "3933": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "AND"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "EQ"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xF74"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "REVERT"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "SWAP2"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "jump": "o",
      "op": "JUMP"
    },
    "3961": {
      "op": "JUMPDEST"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3964": {
      "op": "DUP1"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3967": {
      "op": "DUP1"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3972": {
      "op": "DUP7"
    },
    "3973": {
      "op": "DUP9"
    },
    "3974": {
      "op": "SUB"
    },
    "3975": {
      "op": "SLT"
    },
    "3976": {
      "op": "ISZERO"
    },
    "3977": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "3980": {
      "op": "JUMPI"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3983": {
      "op": "DUP1"
    },
    "3984": {
      "op": "REVERT"
    },
    "3985": {
      "op": "JUMPDEST"
    },
    "3986": {
      "op": "PUSH2",
      "value": "0xF9A"
    },
    "3989": {
      "op": "DUP7"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "3993": {
      "jump": "i",
      "op": "JUMP"
    },
    "3994": {
      "op": "JUMPDEST"
    },
    "3995": {
      "op": "SWAP5"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3999": {
      "op": "DUP7"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "MLOAD"
    },
    "4002": {
      "op": "SWAP4"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4006": {
      "op": "DUP7"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "MLOAD"
    },
    "4009": {
      "op": "SWAP3"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4013": {
      "op": "DUP7"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "MLOAD"
    },
    "4016": {
      "op": "SWAP2"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4023": {
      "op": "DUP8"
    },
    "4024": {
      "op": "ADD"
    },
    "4025": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "4028": {
      "jump": "i",
      "op": "JUMP"
    },
    "4029": {
      "op": "JUMPDEST"
    },
    "4030": {
      "op": "SWAP1"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "SWAP3"
    },
    "4033": {
      "op": "SWAP6"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "SWAP3"
    },
    "4036": {
      "op": "SWAP6"
    },
    "4037": {
      "op": "SWAP1"
    },
    "4038": {
      "op": "SWAP4"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "jump": "o",
      "op": "JUMP"
    },
    "4041": {
      "op": "JUMPDEST"
    },
    "4042": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4049": {
      "op": "SHL"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "REVERT"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4069": {
      "op": "NOT"
    },
    "4070": {
      "op": "DIV"
    },
    "4071": {
      "op": "DUP4"
    },
    "4072": {
      "op": "GT"
    },
    "4073": {
      "op": "DUP3"
    },
    "4074": {
      "op": "ISZERO"
    },
    "4075": {
      "op": "ISZERO"
    },
    "4076": {
      "op": "AND"
    },
    "4077": {
      "op": "ISZERO"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4081": {
      "op": "JUMPI"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0xFC9"
    },
    "4088": {
      "jump": "i",
      "op": "JUMP"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "MUL"
    },
    "4092": {
      "op": "SWAP1"
    },
    "4093": {
      "jump": "o",
      "op": "JUMP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4105": {
      "op": "MSTORE"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4110": {
      "op": "MSTORE"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "REVERT"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1023"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x1023"
    },
    "4127": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4130": {
      "jump": "i",
      "op": "JUMP"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "op": "DIV"
    },
    "4134": {
      "op": "SWAP1"
    },
    "4135": {
      "jump": "o",
      "op": "JUMP"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4139": {
      "op": "DUP1"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "DUP2"
    },
    "4143": {
      "op": "DUP2"
    },
    "4144": {
      "op": "ADD"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4181": {
      "op": "DUP3"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "op": "MSTORE"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4186": {
      "op": "ADD"
    },
    "4187": {
      "op": "SWAP1"
    },
    "4188": {
      "jump": "o",
      "op": "JUMP"
    },
    "4189": {
      "op": "JUMPDEST"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4192": {
      "op": "DUP3"
    },
    "4193": {
      "op": "DUP3"
    },
    "4194": {
      "op": "LT"
    },
    "4195": {
      "op": "ISZERO"
    },
    "4196": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4199": {
      "op": "JUMPI"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4203": {
      "op": "PUSH2",
      "value": "0xFC9"
    },
    "4206": {
      "jump": "i",
      "op": "JUMP"
    },
    "4207": {
      "op": "JUMPDEST"
    },
    "4208": {
      "op": "POP"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "op": "SWAP1"
    },
    "4211": {
      "jump": "o",
      "op": "JUMP"
    },
    "4212": {
      "op": "JUMPDEST"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4219": {
      "op": "JUMPI"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4226": {
      "jump": "i",
      "op": "JUMP"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "op": "MOD"
    },
    "4230": {
      "op": "SWAP1"
    },
    "4231": {
      "jump": "o",
      "op": "JUMP"
    },
    "4232": {
      "op": "JUMPDEST"
    },
    "4233": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4240": {
      "op": "SHL"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4243": {
      "op": "MSTORE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4248": {
      "op": "MSTORE"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4253": {
      "op": "REVERT"
    },
    "4254": {
      "op": "JUMPDEST"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "DUP3"
    },
    "4258": {
      "op": "NOT"
    },
    "4259": {
      "op": "DUP3"
    },
    "4260": {
      "op": "GT"
    },
    "4261": {
      "op": "ISZERO"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4265": {
      "op": "JUMPI"
    },
    "4266": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4269": {
      "op": "PUSH2",
      "value": "0xFC9"
    },
    "4272": {
      "jump": "i",
      "op": "JUMP"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "SWAP1"
    },
    "4277": {
      "jump": "o",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "DUP1"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "op": "SUB"
    },
    "4286": {
      "op": "DUP5"
    },
    "4287": {
      "op": "AND"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "MSTORE"
    },
    "4290": {
      "op": "DUP3"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4300": {
      "op": "DUP3"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "op": "MSTORE"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4310": {
      "op": "DUP4"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "DUP5"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "4316": {
      "jump": "i",
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "SWAP6"
    },
    "4319": {
      "op": "SWAP5"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "op": "POP"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "jump": "o",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "DUP5"
    },
    "4333": {
      "op": "SUB"
    },
    "4334": {
      "op": "SLT"
    },
    "4335": {
      "op": "ISZERO"
    },
    "4336": {
      "op": "PUSH2",
      "value": "0x10F8"
    },
    "4339": {
      "op": "JUMPI"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "DUP1"
    },
    "4343": {
      "op": "REVERT"
    },
    "4344": {
      "op": "JUMPDEST"
    },
    "4345": {
      "op": "DUP2"
    },
    "4346": {
      "op": "MLOAD"
    },
    "4347": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "4350": {
      "op": "DUP2"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "4354": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "9aecf796dd0692d75ae9d4c476632d17d676bea7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\ncontract ArtemLottery is VRFConsumerBase, Ownable, KeeperCompatibleInterface {\n    bool constant AUTO_RESTART_KEEPER = false;\n    bool constant START_ON_DEPLOY = false;\n    address payable[] public players;\n    address payable public recentWinner;\n    uint256 public randomness;\n    uint256 public usdEntryFee;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;\n    uint256 public fee;\n    bytes32 public keyhash;\n    event RequestedRandomness(bytes32 requestId);\n\n    event LotteryEnded(\n        bytes32 indexed requestId,\n        address recentWinner,\n        uint256 randomNumber\n    );\n\n    // 0\n    // 1\n    // 2\n    /**\n     * Use an interval in seconds and a timestamp to slow execution of Upkeep\n     */\n    uint256 public immutable lotteryDurationInSeconds;\n    uint256 public lastTimeStamp;\n    uint256 public lotteryCounter;\n    bool public shouldRestart;\n\n    constructor(\n        address _priceFeedAddress,\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash,\n        uint256 _usdEntryFee,\n        uint256 duration\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        usdEntryFee = _usdEntryFee;\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        fee = _fee;\n        keyhash = _keyhash;\n        lotteryDurationInSeconds = duration;\n        lastTimeStamp = block.timestamp;\n        lotteryCounter = 0;\n        shouldRestart = START_ON_DEPLOY;\n    }\n\n    function enter() public payable {\n        // $10 minimum\n        require(lottery_state == LOTTERY_STATE.OPEN);\n        require(msg.value >= getEntranceFee(), \"Not enough ETH!\");\n        players.push(payable(msg.sender));\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        // $50, $2,000 / ETH\n        // 50/2,000\n        // 50 * 100000 / 2000\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    /**\n     * Returns the latest price\n     */\n    function getLatestPrice() public view returns (int256) {\n        (\n            uint80 roundID,\n            int256 price,\n            uint256 startedAt,\n            uint256 timeStamp,\n            uint80 answeredInRound\n        ) = ethUsdPriceFeed.latestRoundData();\n        return price;\n    }\n\n    function startLottery() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can't start a new lottery yet!\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n        lastTimeStamp = block.timestamp;\n    }\n\n    function endLottery(bool _shouldRestart) public onlyOwner {\n        endLotteryInternal(_shouldRestart);\n    }\n\n    function endLotteryInternal(bool _shouldRestart) internal {\n        lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n        bytes32 requestId = 0;\n        if (players.length > 1) {\n            requestId = requestRandomness(keyhash, fee);\n        }\n        emit RequestedRandomness(requestId);\n        shouldRestart = _shouldRestart;\n        if (players.length <= 1) {\n            fulfillRandomness(requestId, 1);\n        }\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(_randomness > 0, \"random not found\");\n        uint256 indexOfWinner = _randomness % players.length;\n        recentWinner = players[indexOfWinner];\n        emit LotteryEnded(_requestId, recentWinner, randomness);\n        recentWinner.transfer(address(this).balance);\n        // Reset\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        lastTimeStamp = block.timestamp;\n        lotteryCounter = lotteryCounter + 1;\n        randomness = _randomness;\n        if (shouldRestart) {\n            shouldRestart = false;\n            startLottery();\n        }\n    }\n\n    function checkUpkeep(bytes calldata checkData)\n        external\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded =\n            (block.timestamp - lastTimeStamp) > lotteryDurationInSeconds &&\n            lottery_state == LOTTERY_STATE.OPEN &&\n            players.length > 0;\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        endLotteryInternal(AUTO_RESTART_KEEPER);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function getPlayersCount() public view returns (uint256) {\n        return players.length;\n    }\n}\n",
  "sourceMap": "329:4935:7:-:0;;;1330:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:2;;;;;9407;;;;867:23:0;666:10:1;867:9:0;:23::i;:::-;1600:11:7::1;:26:::0;;;;1636:15:::1;:58:::0;;-1:-1:-1;;;;;1636:58:7;;;::::1;-1:-1:-1::0;;;;;;1704:36:7;;;;;;;-1:-1:-1;;;1704:36:7::1;::::0;;;1750:3:::1;:10:::0;;;;1770:7:::1;:18:::0;-1:-1:-1;;1798:35:7::1;::::0;1859:15:::1;1843:13;:31:::0;-1:-1:-1;1884:14:7::1;:18:::0;1912:13:::1;:31:::0;;-1:-1:-1;;1912:31:7::1;::::0;;329:4935;;2041:169:0;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:626::-;320:6;328;336;344;352;360;368;421:3;409:9;400:7;396:23;392:33;389:53;;;438:1;435;428:12;389:53;461:40;491:9;461:40;:::i;:::-;451:50;;520:49;565:2;554:9;550:18;520:49;:::i;:::-;510:59;;588:49;633:2;622:9;618:18;588:49;:::i;:::-;578:59;;677:2;666:9;662:18;656:25;646:35;;721:3;710:9;706:19;700:26;690:36;;766:3;755:9;751:19;745:26;735:36;;811:3;800:9;796:19;790:26;780:36;;196:626;;;;;;;;;;:::o;827:127::-;329:4935:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ArtemLottery.sol",
  "type": "contract"
}